package biz.freshcode.learn.gwt.client.uispike.builder;

import com.sencha.gxt.widget.core.client.container.Viewport;
import biz.freshcode.learn.gwt.client.uispike.builder.BeanBuilder;

// Generated by BeanBuilderGenerator
@BeanBuilder(Viewport.class)
public class ViewportBuilder {
    public final Viewport viewport;

    public ViewportBuilder() {
        this(new Viewport());
    }

    public ViewportBuilder(Viewport v) {
        viewport = v;
    }

    public ViewportBuilder enableScroll(boolean v0) {
        viewport.setEnableScroll(v0);
        return this;
    }

    public ViewportBuilder resize(boolean v0) {
        viewport.setResize(v0);
        return this;
    }

    public ViewportBuilder widget(com.google.gwt.user.client.ui.IsWidget v0) {
        viewport.setWidget(v0);
        return this;
    }

    public ViewportBuilder widget(com.google.gwt.user.client.ui.Widget v0) {
        viewport.setWidget(v0);
        return this;
    }

    public ViewportBuilder size(java.lang.String v0, java.lang.String v1) {
        viewport.setSize(v0, v1);
        return this;
    }

    public ViewportBuilder pixelSize(int v0, int v1) {
        viewport.setPixelSize(v0, v1);
        return this;
    }

    public ViewportBuilder position(int v0, int v1) {
        viewport.setPosition(v0, v1);
        return this;
    }

    public ViewportBuilder allowTextSelection(boolean v0) {
        viewport.setAllowTextSelection(v0);
        return this;
    }

    public ViewportBuilder borders(boolean v0) {
        viewport.setBorders(v0);
        return this;
    }

    public ViewportBuilder bounds(int v0, int v1, int v2, int v3) {
        viewport.setBounds(v0, v1, v2, v3);
        return this;
    }

    public ViewportBuilder bounds(com.sencha.gxt.core.client.util.Rectangle v0) {
        viewport.setBounds(v0);
        return this;
    }

    public ViewportBuilder contextMenu(com.sencha.gxt.widget.core.client.menu.Menu v0) {
        viewport.setContextMenu(v0);
        return this;
    }

    public ViewportBuilder data(java.lang.String v0, java.lang.Object v1) {
        viewport.setData(v0, v1);
        return this;
    }

    public ViewportBuilder deferHeight(boolean v0) {
        viewport.setDeferHeight(v0);
        return this;
    }

    public ViewportBuilder enabled(boolean v0) {
        viewport.setEnabled(v0);
        return this;
    }

    public ViewportBuilder height(int v0) {
        viewport.setHeight(v0);
        return this;
    }

    public ViewportBuilder height(java.lang.String v0) {
        viewport.setHeight(v0);
        return this;
    }

    public ViewportBuilder hideMode(com.sencha.gxt.core.client.Style.HideMode v0) {
        viewport.setHideMode(v0);
        return this;
    }

    public ViewportBuilder id(java.lang.String v0) {
        viewport.setId(v0);
        return this;
    }

    public ViewportBuilder itemId(java.lang.String v0) {
        viewport.setItemId(v0);
        return this;
    }

    public ViewportBuilder pagePosition(int v0, int v1) {
        viewport.setPagePosition(v0, v1);
        return this;
    }

    public ViewportBuilder shadow(boolean v0) {
        viewport.setShadow(v0);
        return this;
    }

    public ViewportBuilder stateful(boolean v0) {
        viewport.setStateful(v0);
        return this;
    }

    public ViewportBuilder stateId(java.lang.String v0) {
        viewport.setStateId(v0);
        return this;
    }

    public ViewportBuilder tabIndex(int v0) {
        viewport.setTabIndex(v0);
        return this;
    }

    public ViewportBuilder toolTip(java.lang.String v0) {
        viewport.setToolTip(v0);
        return this;
    }

    public ViewportBuilder toolTipConfig(com.sencha.gxt.widget.core.client.tips.ToolTipConfig v0) {
        viewport.setToolTipConfig(v0);
        return this;
    }

    public ViewportBuilder visible(boolean v0) {
        viewport.setVisible(v0);
        return this;
    }

    public ViewportBuilder width(int v0) {
        viewport.setWidth(v0);
        return this;
    }

    public ViewportBuilder width(java.lang.String v0) {
        viewport.setWidth(v0);
        return this;
    }

    public ViewportBuilder layoutData(java.lang.Object v0) {
        viewport.setLayoutData(v0);
        return this;
    }

    public ViewportBuilder styleDependentName(java.lang.String v0, boolean v1) {
        viewport.setStyleDependentName(v0, v1);
        return this;
    }

    public ViewportBuilder styleName(java.lang.String v0, boolean v1) {
        viewport.setStyleName(v0, v1);
        return this;
    }

    public ViewportBuilder styleName(java.lang.String v0) {
        viewport.setStyleName(v0);
        return this;
    }

    public ViewportBuilder stylePrimaryName(java.lang.String v0) {
        viewport.setStylePrimaryName(v0);
        return this;
    }

    public ViewportBuilder title(java.lang.String v0) {
        viewport.setTitle(v0);
        return this;
    }

    public ViewportBuilder initFrom(Viewport v) {
        return this
                .enableScroll(v.getEnableScroll())
                .widget(v.getWidget())
                .hideMode(v.getHideMode())
                .id(v.getId())
                .itemId(v.getItemId())
                .shadow(v.getShadow())
                .stateId(v.getStateId())
                .layoutData(v.getLayoutData())
                .styleName(v.getStyleName())
                .stylePrimaryName(v.getStylePrimaryName())
                .title(v.getTitle());
    }
}
