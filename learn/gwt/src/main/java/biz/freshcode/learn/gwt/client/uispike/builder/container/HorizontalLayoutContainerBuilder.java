package biz.freshcode.learn.gwt.client.uispike.builder.container;

import com.sencha.gxt.widget.core.client.container.HorizontalLayoutContainer;

// Generated by BeanBuilderGenerator
@biz.freshcode.learn.gwt.client.uispike.builder.BeanBuilder(HorizontalLayoutContainer.class)
public class HorizontalLayoutContainerBuilder {
    public final HorizontalLayoutContainer horizontalLayoutContainer;

    public HorizontalLayoutContainerBuilder() {
        this(new HorizontalLayoutContainer());
    }

    public HorizontalLayoutContainerBuilder(HorizontalLayoutContainer v) {
        horizontalLayoutContainer = v;
    }

    public HorizontalLayoutContainerBuilder add(com.google.gwt.user.client.ui.IsWidget v0) {
        horizontalLayoutContainer.add(v0);
        return this;
    }

    public HorizontalLayoutContainerBuilder add(com.google.gwt.user.client.ui.Widget v0) {
        horizontalLayoutContainer.add(v0);
        return this;
    }

    public HorizontalLayoutContainerBuilder add(com.google.gwt.user.client.ui.IsWidget v0, com.sencha.gxt.widget.core.client.container.HorizontalLayoutContainer.HorizontalLayoutData v1) {
        horizontalLayoutContainer.add(v0, v1);
        return this;
    }

    public HorizontalLayoutContainerBuilder addStyleDependentName(java.lang.String v0) {
        horizontalLayoutContainer.addStyleDependentName(v0);
        return this;
    }

    public HorizontalLayoutContainerBuilder addStyleName(java.lang.String v0) {
        horizontalLayoutContainer.addStyleName(v0);
        return this;
    }

    public HorizontalLayoutContainerBuilder addStyleOnOver(com.google.gwt.dom.client.Element v0, java.lang.String v1) {
        horizontalLayoutContainer.addStyleOnOver(v0, v1);
        return this;
    }

    public HorizontalLayoutContainerBuilder adjustForScroll(boolean v0) {
        horizontalLayoutContainer.setAdjustForScroll(v0);
        return this;
    }

    public HorizontalLayoutContainerBuilder allowTextSelection(boolean v0) {
        horizontalLayoutContainer.setAllowTextSelection(v0);
        return this;
    }

    public HorizontalLayoutContainerBuilder borders(boolean v0) {
        horizontalLayoutContainer.setBorders(v0);
        return this;
    }

    public HorizontalLayoutContainerBuilder bounds(com.sencha.gxt.core.client.util.Rectangle v0) {
        horizontalLayoutContainer.setBounds(v0);
        return this;
    }

    public HorizontalLayoutContainerBuilder bounds(int v0, int v1, int v2, int v3) {
        horizontalLayoutContainer.setBounds(v0, v1, v2, v3);
        return this;
    }

    public HorizontalLayoutContainerBuilder contextMenu(com.sencha.gxt.widget.core.client.menu.Menu v0) {
        horizontalLayoutContainer.setContextMenu(v0);
        return this;
    }

    public HorizontalLayoutContainerBuilder data(java.lang.String v0, java.lang.Object v1) {
        horizontalLayoutContainer.setData(v0, v1);
        return this;
    }

    public HorizontalLayoutContainerBuilder deferHeight(boolean v0) {
        horizontalLayoutContainer.setDeferHeight(v0);
        return this;
    }

    public HorizontalLayoutContainerBuilder enabled(boolean v0) {
        horizontalLayoutContainer.setEnabled(v0);
        return this;
    }

    public HorizontalLayoutContainerBuilder height(int v0) {
        horizontalLayoutContainer.setHeight(v0);
        return this;
    }

    public HorizontalLayoutContainerBuilder height(java.lang.String v0) {
        horizontalLayoutContainer.setHeight(v0);
        return this;
    }

    public HorizontalLayoutContainerBuilder hideMode(com.sencha.gxt.core.client.Style.HideMode v0) {
        horizontalLayoutContainer.setHideMode(v0);
        return this;
    }

    public HorizontalLayoutContainerBuilder id(java.lang.String v0) {
        horizontalLayoutContainer.setId(v0);
        return this;
    }

    public HorizontalLayoutContainerBuilder itemId(java.lang.String v0) {
        horizontalLayoutContainer.setItemId(v0);
        return this;
    }

    public HorizontalLayoutContainerBuilder layoutData(java.lang.Object v0) {
        horizontalLayoutContainer.setLayoutData(v0);
        return this;
    }

    public HorizontalLayoutContainerBuilder pagePosition(int v0, int v1) {
        horizontalLayoutContainer.setPagePosition(v0, v1);
        return this;
    }

    public HorizontalLayoutContainerBuilder pixelSize(int v0, int v1) {
        horizontalLayoutContainer.setPixelSize(v0, v1);
        return this;
    }

    public HorizontalLayoutContainerBuilder position(int v0, int v1) {
        horizontalLayoutContainer.setPosition(v0, v1);
        return this;
    }

    public HorizontalLayoutContainerBuilder scrollMode(com.sencha.gxt.core.client.dom.ScrollSupport.ScrollMode v0) {
        horizontalLayoutContainer.setScrollMode(v0);
        return this;
    }

    public HorizontalLayoutContainerBuilder scrollSupport(com.sencha.gxt.core.client.dom.ScrollSupport v0) {
        horizontalLayoutContainer.setScrollSupport(v0);
        return this;
    }

    public HorizontalLayoutContainerBuilder shadow(boolean v0) {
        horizontalLayoutContainer.setShadow(v0);
        return this;
    }

    public HorizontalLayoutContainerBuilder size(java.lang.String v0, java.lang.String v1) {
        horizontalLayoutContainer.setSize(v0, v1);
        return this;
    }

    public HorizontalLayoutContainerBuilder stateId(java.lang.String v0) {
        horizontalLayoutContainer.setStateId(v0);
        return this;
    }

    public HorizontalLayoutContainerBuilder stateful(boolean v0) {
        horizontalLayoutContainer.setStateful(v0);
        return this;
    }

    public HorizontalLayoutContainerBuilder styleDependentName(java.lang.String v0, boolean v1) {
        horizontalLayoutContainer.setStyleDependentName(v0, v1);
        return this;
    }

    public HorizontalLayoutContainerBuilder styleName(java.lang.String v0) {
        horizontalLayoutContainer.setStyleName(v0);
        return this;
    }

    public HorizontalLayoutContainerBuilder styleName(java.lang.String v0, boolean v1) {
        horizontalLayoutContainer.setStyleName(v0, v1);
        return this;
    }

    public HorizontalLayoutContainerBuilder stylePrimaryName(java.lang.String v0) {
        horizontalLayoutContainer.setStylePrimaryName(v0);
        return this;
    }

    public HorizontalLayoutContainerBuilder tabIndex(int v0) {
        horizontalLayoutContainer.setTabIndex(v0);
        return this;
    }

    public HorizontalLayoutContainerBuilder title(java.lang.String v0) {
        horizontalLayoutContainer.setTitle(v0);
        return this;
    }

    public HorizontalLayoutContainerBuilder toolTip(java.lang.String v0) {
        horizontalLayoutContainer.setToolTip(v0);
        return this;
    }

    public HorizontalLayoutContainerBuilder toolTipConfig(com.sencha.gxt.widget.core.client.tips.ToolTipConfig v0) {
        horizontalLayoutContainer.setToolTipConfig(v0);
        return this;
    }

    public HorizontalLayoutContainerBuilder visible(boolean v0) {
        horizontalLayoutContainer.setVisible(v0);
        return this;
    }

    public HorizontalLayoutContainerBuilder width(int v0) {
        horizontalLayoutContainer.setWidth(v0);
        return this;
    }

    public HorizontalLayoutContainerBuilder width(java.lang.String v0) {
        horizontalLayoutContainer.setWidth(v0);
        return this;
    }
}
