package biz.freshcode.learn.gwt.client.builder.gxt.form;

import com.sencha.gxt.widget.core.client.form.SpinnerField;

/**
 * Generated by BeanBuilderGenerator
 *
 * @see com.sencha.gxt.widget.core.client.form.SpinnerField
 */
@SuppressWarnings("UnusedDeclaration")
@biz.freshcode.learn.gwt.client.builder.BeanBuilder(SpinnerField.class)
public class SpinnerFieldBuilder<N extends Number> extends biz.freshcode.learn.gwt.client.builder.Construct.Parent<SpinnerFieldBuilder<N>> {
    public final SpinnerField<N> spinnerField;

    public SpinnerFieldBuilder(SpinnerField<N> v) {
        spinnerField = v;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.SpinnerField#SpinnerField(com.sencha.gxt.widget.core.client.form.NumberPropertyEditor)
     */
    public SpinnerFieldBuilder(com.sencha.gxt.widget.core.client.form.NumberPropertyEditor<N> v0) {
        this(new SpinnerField<N>(v0));
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.SpinnerField#SpinnerField(com.sencha.gxt.cell.core.client.form.SpinnerFieldCell)
     */
    public SpinnerFieldBuilder(com.sencha.gxt.cell.core.client.form.SpinnerFieldCell<N> v0) {
        this(new SpinnerField<N>(v0));
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.SpinnerField#addStyleDependentName(java.lang.String)
     */
    public SpinnerFieldBuilder<N> addStyleDependentName(java.lang.String v0) {
        spinnerField.addStyleDependentName(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.SpinnerField#addStyleName(java.lang.String)
     */
    public SpinnerFieldBuilder<N> addStyleName(java.lang.String v0) {
        spinnerField.addStyleName(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.SpinnerField#addStyleOnOver(com.google.gwt.dom.client.Element, java.lang.String)
     */
    public SpinnerFieldBuilder<N> addStyleOnOver(com.google.gwt.dom.client.Element v0, java.lang.String v1) {
        spinnerField.addStyleOnOver(v0, v1);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.SpinnerField#addValidator(com.sencha.gxt.widget.core.client.form.Validator)
     */
    public SpinnerFieldBuilder<N> addValidator(com.sencha.gxt.widget.core.client.form.Validator<N> v0) {
        spinnerField.addValidator(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.SpinnerField#setAllowBlank(boolean)
     */
    public SpinnerFieldBuilder<N> allowBlank(boolean v0) {
        spinnerField.setAllowBlank(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.SpinnerField#setAllowDecimals(boolean)
     */
    public SpinnerFieldBuilder<N> allowDecimals(boolean v0) {
        spinnerField.setAllowDecimals(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.SpinnerField#setAllowNegative(boolean)
     */
    public SpinnerFieldBuilder<N> allowNegative(boolean v0) {
        spinnerField.setAllowNegative(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.SpinnerField#setAllowTextSelection(boolean)
     */
    public SpinnerFieldBuilder<N> allowTextSelection(boolean v0) {
        spinnerField.setAllowTextSelection(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.SpinnerField#setAutoValidate(boolean)
     */
    public SpinnerFieldBuilder<N> autoValidate(boolean v0) {
        spinnerField.setAutoValidate(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.SpinnerField#setBorders(boolean)
     */
    public SpinnerFieldBuilder<N> borders(boolean v0) {
        spinnerField.setBorders(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.SpinnerField#setBounds(com.sencha.gxt.core.client.util.Rectangle)
     */
    public SpinnerFieldBuilder<N> bounds(com.sencha.gxt.core.client.util.Rectangle v0) {
        spinnerField.setBounds(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.SpinnerField#setBounds(int, int, int, int)
     */
    public SpinnerFieldBuilder<N> bounds(int v0, int v1, int v2, int v3) {
        spinnerField.setBounds(v0, v1, v2, v3);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.SpinnerField#setClearValueOnParseError(boolean)
     */
    public SpinnerFieldBuilder<N> clearValueOnParseError(boolean v0) {
        spinnerField.setClearValueOnParseError(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.SpinnerField#setContextMenu(com.sencha.gxt.widget.core.client.menu.Menu)
     */
    public SpinnerFieldBuilder<N> contextMenu(com.sencha.gxt.widget.core.client.menu.Menu v0) {
        spinnerField.setContextMenu(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.SpinnerField#setCursorPos(int)
     */
    public SpinnerFieldBuilder<N> cursorPos(int v0) {
        spinnerField.setCursorPos(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.SpinnerField#setData(java.lang.String, java.lang.Object)
     */
    public SpinnerFieldBuilder<N> data(java.lang.String v0, java.lang.Object v1) {
        spinnerField.setData(v0, v1);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.SpinnerField#setDeferHeight(boolean)
     */
    public SpinnerFieldBuilder<N> deferHeight(boolean v0) {
        spinnerField.setDeferHeight(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.SpinnerField#setDelegate(com.google.gwt.editor.client.EditorDelegate)
     */
    public SpinnerFieldBuilder<N> delegate(com.google.gwt.editor.client.EditorDelegate<N> v0) {
        spinnerField.setDelegate(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.SpinnerField#setDirection(com.google.gwt.i18n.client.HasDirection.Direction)
     */
    public SpinnerFieldBuilder<N> direction(com.google.gwt.i18n.client.HasDirection.Direction v0) {
        spinnerField.setDirection(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.SpinnerField#setDirectionEstimator(com.google.gwt.i18n.shared.DirectionEstimator)
     */
    public SpinnerFieldBuilder<N> directionEstimator(com.google.gwt.i18n.shared.DirectionEstimator v0) {
        spinnerField.setDirectionEstimator(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.SpinnerField#setDirectionEstimator(boolean)
     */
    public SpinnerFieldBuilder<N> directionEstimator(boolean v0) {
        spinnerField.setDirectionEstimator(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.SpinnerField#setEditable(boolean)
     */
    public SpinnerFieldBuilder<N> editable(boolean v0) {
        spinnerField.setEditable(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.SpinnerField#setEmptyText(java.lang.String)
     */
    public SpinnerFieldBuilder<N> emptyText(java.lang.String v0) {
        spinnerField.setEmptyText(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.SpinnerField#setEnabled(boolean)
     */
    public SpinnerFieldBuilder<N> enabled(boolean v0) {
        spinnerField.setEnabled(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.SpinnerField#setErrorSupport(com.sencha.gxt.widget.core.client.form.error.ErrorHandler)
     */
    public SpinnerFieldBuilder<N> errorSupport(com.sencha.gxt.widget.core.client.form.error.ErrorHandler v0) {
        spinnerField.setErrorSupport(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.SpinnerField#setFinishEditOnEnter(boolean)
     */
    public SpinnerFieldBuilder<N> finishEditOnEnter(boolean v0) {
        spinnerField.setFinishEditOnEnter(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.SpinnerField#setHeight(int)
     */
    public SpinnerFieldBuilder<N> height(int v0) {
        spinnerField.setHeight(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.SpinnerField#setHeight(java.lang.String)
     */
    public SpinnerFieldBuilder<N> height(java.lang.String v0) {
        spinnerField.setHeight(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.SpinnerField#setHideMode(com.sencha.gxt.core.client.Style.HideMode)
     */
    public SpinnerFieldBuilder<N> hideMode(com.sencha.gxt.core.client.Style.HideMode v0) {
        spinnerField.setHideMode(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.SpinnerField#setHideTrigger(boolean)
     */
    public SpinnerFieldBuilder<N> hideTrigger(boolean v0) {
        spinnerField.setHideTrigger(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.SpinnerField#setId(java.lang.String)
     */
    public SpinnerFieldBuilder<N> id(java.lang.String v0) {
        spinnerField.setId(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.SpinnerField#setIncrement(N)
     */
    public SpinnerFieldBuilder<N> increment(N v0) {
        spinnerField.setIncrement(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.SpinnerField#setItemId(java.lang.String)
     */
    public SpinnerFieldBuilder<N> itemId(java.lang.String v0) {
        spinnerField.setItemId(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.SpinnerField#setLayoutData(java.lang.Object)
     */
    public SpinnerFieldBuilder<N> layoutData(java.lang.Object v0) {
        spinnerField.setLayoutData(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.SpinnerField#setMaxValue(N)
     */
    public SpinnerFieldBuilder<N> maxValue(N v0) {
        spinnerField.setMaxValue(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.SpinnerField#setMessages(com.sencha.gxt.widget.core.client.form.SpinnerField.SpinnerMessages)
     */
    public SpinnerFieldBuilder<N> messages(com.sencha.gxt.widget.core.client.form.SpinnerField.SpinnerMessages v0) {
        spinnerField.setMessages(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.SpinnerField#setMinValue(java.lang.Number)
     */
    public SpinnerFieldBuilder<N> minValue(java.lang.Number v0) {
        spinnerField.setMinValue(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.SpinnerField#setMonitorTab(boolean)
     */
    public SpinnerFieldBuilder<N> monitorTab(boolean v0) {
        spinnerField.setMonitorTab(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.SpinnerField#setName(java.lang.String)
     */
    public SpinnerFieldBuilder<N> name(java.lang.String v0) {
        spinnerField.setName(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.SpinnerField#setOriginalValue(Object)
     */
    public SpinnerFieldBuilder<N> originalValue(N v0) {
        spinnerField.setOriginalValue(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.SpinnerField#setPagePosition(int, int)
     */
    public SpinnerFieldBuilder<N> pagePosition(int v0, int v1) {
        spinnerField.setPagePosition(v0, v1);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.SpinnerField#setPixelSize(int, int)
     */
    public SpinnerFieldBuilder<N> pixelSize(int v0, int v1) {
        spinnerField.setPixelSize(v0, v1);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.SpinnerField#setPosition(int, int)
     */
    public SpinnerFieldBuilder<N> position(int v0, int v1) {
        spinnerField.setPosition(v0, v1);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.SpinnerField#setPropertyEditor(com.sencha.gxt.widget.core.client.form.PropertyEditor)
     */
    public SpinnerFieldBuilder<N> propertyEditor(com.sencha.gxt.widget.core.client.form.PropertyEditor<N> v0) {
        spinnerField.setPropertyEditor(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.SpinnerField#setReadOnly(boolean)
     */
    public SpinnerFieldBuilder<N> readOnly(boolean v0) {
        spinnerField.setReadOnly(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.SpinnerField#setSelectOnFocus(boolean)
     */
    public SpinnerFieldBuilder<N> selectOnFocus(boolean v0) {
        spinnerField.setSelectOnFocus(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.SpinnerField#setSelectionRange(int, int)
     */
    public SpinnerFieldBuilder<N> selectionRange(int v0, int v1) {
        spinnerField.setSelectionRange(v0, v1);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.SpinnerField#setShadow(boolean)
     */
    public SpinnerFieldBuilder<N> shadow(boolean v0) {
        spinnerField.setShadow(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.SpinnerField#setShadowPosition(com.sencha.gxt.core.client.dom.Layer.ShadowPosition)
     */
    public SpinnerFieldBuilder<N> shadowPosition(com.sencha.gxt.core.client.dom.Layer.ShadowPosition v0) {
        spinnerField.setShadowPosition(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.SpinnerField#setSize(java.lang.String, java.lang.String)
     */
    public SpinnerFieldBuilder<N> size(java.lang.String v0, java.lang.String v1) {
        spinnerField.setSize(v0, v1);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.SpinnerField#setStateId(java.lang.String)
     */
    public SpinnerFieldBuilder<N> stateId(java.lang.String v0) {
        spinnerField.setStateId(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.SpinnerField#setStateful(boolean)
     */
    public SpinnerFieldBuilder<N> stateful(boolean v0) {
        spinnerField.setStateful(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.SpinnerField#setStyleDependentName(java.lang.String, boolean)
     */
    public SpinnerFieldBuilder<N> styleDependentName(java.lang.String v0, boolean v1) {
        spinnerField.setStyleDependentName(v0, v1);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.SpinnerField#setStyleName(java.lang.String)
     */
    public SpinnerFieldBuilder<N> styleName(java.lang.String v0) {
        spinnerField.setStyleName(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.SpinnerField#setStyleName(java.lang.String, boolean)
     */
    public SpinnerFieldBuilder<N> styleName(java.lang.String v0, boolean v1) {
        spinnerField.setStyleName(v0, v1);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.SpinnerField#setStylePrimaryName(java.lang.String)
     */
    public SpinnerFieldBuilder<N> stylePrimaryName(java.lang.String v0) {
        spinnerField.setStylePrimaryName(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.SpinnerField#setTabIndex(int)
     */
    public SpinnerFieldBuilder<N> tabIndex(int v0) {
        spinnerField.setTabIndex(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.SpinnerField#setText(java.lang.String)
     */
    public SpinnerFieldBuilder<N> text(java.lang.String v0) {
        spinnerField.setText(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.SpinnerField#setTitle(java.lang.String)
     */
    public SpinnerFieldBuilder<N> title(java.lang.String v0) {
        spinnerField.setTitle(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.SpinnerField#setToolTip(java.lang.String)
     */
    public SpinnerFieldBuilder<N> toolTip(java.lang.String v0) {
        spinnerField.setToolTip(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.SpinnerField#setToolTipConfig(com.sencha.gxt.widget.core.client.tips.ToolTipConfig)
     */
    public SpinnerFieldBuilder<N> toolTipConfig(com.sencha.gxt.widget.core.client.tips.ToolTipConfig v0) {
        spinnerField.setToolTipConfig(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.SpinnerField#setValidateOnBlur(boolean)
     */
    public SpinnerFieldBuilder<N> validateOnBlur(boolean v0) {
        spinnerField.setValidateOnBlur(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.SpinnerField#setValidationDelay(int)
     */
    public SpinnerFieldBuilder<N> validationDelay(int v0) {
        spinnerField.setValidationDelay(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.SpinnerField#setValue(Object)
     */
    public SpinnerFieldBuilder<N> value(N v0) {
        spinnerField.setValue(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.SpinnerField#setValue(Object, boolean)
     */
    public SpinnerFieldBuilder<N> value(N v0, boolean v1) {
        spinnerField.setValue(v0, v1);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.SpinnerField#setValue(Object, boolean, boolean)
     */
    public SpinnerFieldBuilder<N> value(N v0, boolean v1, boolean v2) {
        spinnerField.setValue(v0, v1, v2);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.SpinnerField#setVisible(boolean)
     */
    public SpinnerFieldBuilder<N> visible(boolean v0) {
        spinnerField.setVisible(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.SpinnerField#setWidth(int)
     */
    public SpinnerFieldBuilder<N> width(int v0) {
        spinnerField.setWidth(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.SpinnerField#setWidth(java.lang.String)
     */
    public SpinnerFieldBuilder<N> width(java.lang.String v0) {
        spinnerField.setWidth(v0);
        return this;
    }
}
