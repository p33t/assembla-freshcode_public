package biz.freshcode.learn.gwt2.common.client.builder.gxt.chart.series;

import com.sencha.gxt.chart.client.chart.series.AreaSeries;

/**
 * Generated by BeanBuilderGenerator
 *
 * @see com.sencha.gxt.chart.client.chart.series.AreaSeries
 */
@SuppressWarnings("UnusedDeclaration")
@biz.freshcode.learn.gwt2.common.client.builder.BeanBuilder(AreaSeries.class)
public class AreaSeriesBuilder<M> extends biz.freshcode.learn.gwt2.common.client.builder.Construct.Parent<AreaSeriesBuilder<M>> {
    public final AreaSeries<M> areaSeries;

    public AreaSeriesBuilder(AreaSeries<M> v) {
        areaSeries = v;
    }

    public AreaSeriesBuilder() {
        this(new AreaSeries<M>());
    }

    /**
     * @see com.sencha.gxt.chart.client.chart.series.AreaSeries#addColor(int, com.sencha.gxt.chart.client.draw.Color)
     */
    public AreaSeriesBuilder<M> addColor(int v0, com.sencha.gxt.chart.client.draw.Color v1) {
        areaSeries.addColor(v0, v1);
        return this;
    }

    /**
     * @see com.sencha.gxt.chart.client.chart.series.AreaSeries#addYField(com.sencha.gxt.core.client.ValueProvider)
     */
    public AreaSeriesBuilder<M> addYField(com.sencha.gxt.core.client.ValueProvider<? super M, ? extends java.lang.Number> v0) {
        areaSeries.addYField(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.chart.client.chart.series.AreaSeries#addYField(int, com.sencha.gxt.core.client.ValueProvider)
     */
    public AreaSeriesBuilder<M> addYField(int v0, com.sencha.gxt.core.client.ValueProvider<? super M, ? extends java.lang.Number> v1) {
        areaSeries.addYField(v0, v1);
        return this;
    }

    /**
     * @see com.sencha.gxt.chart.client.chart.series.AreaSeries#setChart(com.sencha.gxt.chart.client.chart.Chart)
     */
    public AreaSeriesBuilder<M> chart(com.sencha.gxt.chart.client.chart.Chart<M> v0) {
        areaSeries.setChart(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.chart.client.chart.series.AreaSeries#setHighlightLineConfig(com.sencha.gxt.chart.client.draw.path.PathSprite)
     */
    public AreaSeriesBuilder<M> highlightLineConfig(com.sencha.gxt.chart.client.draw.path.PathSprite v0) {
        areaSeries.setHighlightLineConfig(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.chart.client.chart.series.AreaSeries#setHighlighter(com.sencha.gxt.chart.client.chart.series.SeriesHighlighter)
     */
    public AreaSeriesBuilder<M> highlighter(com.sencha.gxt.chart.client.chart.series.SeriesHighlighter v0) {
        areaSeries.setHighlighter(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.chart.client.chart.series.AreaSeries#setHighlighting(boolean)
     */
    public AreaSeriesBuilder<M> highlighting(boolean v0) {
        areaSeries.setHighlighting(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.chart.client.chart.series.AreaSeries#setLabelConfig(com.sencha.gxt.chart.client.chart.series.SeriesLabelConfig)
     */
    public AreaSeriesBuilder<M> labelConfig(com.sencha.gxt.chart.client.chart.series.SeriesLabelConfig<M> v0) {
        areaSeries.setLabelConfig(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.chart.client.chart.series.AreaSeries#setLegendTitles(java.util.List)
     */
    public AreaSeriesBuilder<M> legendTitles(java.util.List<java.lang.String> v0) {
        areaSeries.setLegendTitles(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.chart.client.chart.series.AreaSeries#setRenderer(com.sencha.gxt.chart.client.chart.series.SeriesRenderer)
     */
    public AreaSeriesBuilder<M> renderer(com.sencha.gxt.chart.client.chart.series.SeriesRenderer<M> v0) {
        areaSeries.setRenderer(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.chart.client.chart.series.AreaSeries#setShadowRenderer(com.sencha.gxt.chart.client.chart.series.SeriesRenderer)
     */
    public AreaSeriesBuilder<M> shadowRenderer(com.sencha.gxt.chart.client.chart.series.SeriesRenderer<M> v0) {
        areaSeries.setShadowRenderer(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.chart.client.chart.series.AreaSeries#setShownInLegend(boolean)
     */
    public AreaSeriesBuilder<M> shownInLegend(boolean v0) {
        areaSeries.setShownInLegend(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.chart.client.chart.series.AreaSeries#setStroke(com.sencha.gxt.chart.client.draw.Color)
     */
    public AreaSeriesBuilder<M> stroke(com.sencha.gxt.chart.client.draw.Color v0) {
        areaSeries.setStroke(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.chart.client.chart.series.AreaSeries#setStrokeWidth(double)
     */
    public AreaSeriesBuilder<M> strokeWidth(double v0) {
        areaSeries.setStrokeWidth(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.chart.client.chart.series.AreaSeries#setToolTipConfig(com.sencha.gxt.chart.client.chart.series.SeriesToolTipConfig)
     */
    public AreaSeriesBuilder<M> toolTipConfig(com.sencha.gxt.chart.client.chart.series.SeriesToolTipConfig<M> v0) {
        areaSeries.setToolTipConfig(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.chart.client.chart.series.AreaSeries#setXAxisPosition(com.sencha.gxt.chart.client.chart.Chart.Position)
     */
    public AreaSeriesBuilder<M> xAxisPosition(com.sencha.gxt.chart.client.chart.Chart.Position v0) {
        areaSeries.setXAxisPosition(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.chart.client.chart.series.AreaSeries#setXField(com.sencha.gxt.core.client.ValueProvider)
     */
    public AreaSeriesBuilder<M> xField(com.sencha.gxt.core.client.ValueProvider<? super M, ? extends java.lang.Number> v0) {
        areaSeries.setXField(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.chart.client.chart.series.AreaSeries#setYAxisPosition(com.sencha.gxt.chart.client.chart.Chart.Position)
     */
    public AreaSeriesBuilder<M> yAxisPosition(com.sencha.gxt.chart.client.chart.Chart.Position v0) {
        areaSeries.setYAxisPosition(v0);
        return this;
    }
}
