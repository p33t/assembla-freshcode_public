package biz.freshcode.learn.gwt.client.uispike.builder;

import com.sencha.gxt.widget.core.client.toolbar.ToolBar;

// Generated by BeanBuilderGenerator
@BeanBuilder(ToolBar.class)
public class ToolBarBuilder {
  public final ToolBar toolBar;

  public ToolBarBuilder() {
    this(new ToolBar());
  }

  public ToolBarBuilder(ToolBar v) {
    toolBar = v;
  }

  public ToolBarBuilder minButtonWidth(int v0) {
    toolBar.setMinButtonWidth(v0);
    return this;
  }

  public ToolBarBuilder verticalSpacing(int v0) {
    toolBar.setVerticalSpacing(v0);
    return this;
  }

  public ToolBarBuilder horizontalSpacing(int v0) {
    toolBar.setHorizontalSpacing(v0);
    return this;
  }

  public ToolBarBuilder spacing(int v0) {
    toolBar.setSpacing(v0);
    return this;
  }

  public ToolBarBuilder hBoxLayoutAlign(com.sencha.gxt.widget.core.client.container.HBoxLayoutContainer.HBoxLayoutAlign v0) {
    toolBar.setHBoxLayoutAlign(v0);
    return this;
  }

  public ToolBarBuilder enableOverflow(boolean v0) {
    toolBar.setEnableOverflow(v0);
    return this;
  }

  public ToolBarBuilder add(com.google.gwt.user.client.ui.IsWidget v0, com.sencha.gxt.widget.core.client.container.BoxLayoutContainer.BoxLayoutData v1) {
    toolBar.add(v0, v1);
    return this;
  }

  public ToolBarBuilder padding(com.sencha.gxt.core.client.util.Padding v0) {
    toolBar.setPadding(v0);
    return this;
  }

  public ToolBarBuilder adjustForFlexRemainder(boolean v0) {
    toolBar.setAdjustForFlexRemainder(v0);
    return this;
  }

  public ToolBarBuilder pack(com.sencha.gxt.widget.core.client.container.BoxLayoutContainer.BoxLayoutPack v0) {
    toolBar.setPack(v0);
    return this;
  }

  public ToolBarBuilder scrollOffset(int v0) {
    toolBar.setScrollOffset(v0);
    return this;
  }

  public ToolBarBuilder add(com.google.gwt.user.client.ui.IsWidget v0) {
    toolBar.add(v0);
    return this;
  }

  public ToolBarBuilder add(com.google.gwt.user.client.ui.Widget v0) {
    toolBar.add(v0);
    return this;
  }

  public ToolBarBuilder size(java.lang.String v0, java.lang.String v1) {
    toolBar.setSize(v0, v1);
    return this;
  }

  public ToolBarBuilder enabled(boolean v0) {
    toolBar.setEnabled(v0);
    return this;
  }

  public ToolBarBuilder itemId(java.lang.String v0) {
    toolBar.setItemId(v0);
    return this;
  }

  public ToolBarBuilder position(int v0, int v1) {
    toolBar.setPosition(v0, v1);
    return this;
  }

  public ToolBarBuilder visible(boolean v0) {
    toolBar.setVisible(v0);
    return this;
  }

  public ToolBarBuilder data(java.lang.String v0, java.lang.Object v1) {
    toolBar.setData(v0, v1);
    return this;
  }

  public ToolBarBuilder pixelSize(int v0, int v1) {
    toolBar.setPixelSize(v0, v1);
    return this;
  }

  public ToolBarBuilder addStyleOnOver(com.google.gwt.dom.client.Element v0, java.lang.String v1) {
    toolBar.addStyleOnOver(v0, v1);
    return this;
  }

  public ToolBarBuilder allowTextSelection(boolean v0) {
    toolBar.setAllowTextSelection(v0);
    return this;
  }

  public ToolBarBuilder borders(boolean v0) {
    toolBar.setBorders(v0);
    return this;
  }

  public ToolBarBuilder bounds(int v0, int v1, int v2, int v3) {
    toolBar.setBounds(v0, v1, v2, v3);
    return this;
  }

  public ToolBarBuilder bounds(com.sencha.gxt.core.client.util.Rectangle v0) {
    toolBar.setBounds(v0);
    return this;
  }

  public ToolBarBuilder contextMenu(com.sencha.gxt.widget.core.client.menu.Menu v0) {
    toolBar.setContextMenu(v0);
    return this;
  }

  public ToolBarBuilder deferHeight(boolean v0) {
    toolBar.setDeferHeight(v0);
    return this;
  }

  public ToolBarBuilder height(int v0) {
    toolBar.setHeight(v0);
    return this;
  }

  public ToolBarBuilder height(java.lang.String v0) {
    toolBar.setHeight(v0);
    return this;
  }

  public ToolBarBuilder hideMode(com.sencha.gxt.core.client.Style.HideMode v0) {
    toolBar.setHideMode(v0);
    return this;
  }

  public ToolBarBuilder id(java.lang.String v0) {
    toolBar.setId(v0);
    return this;
  }

  public ToolBarBuilder pagePosition(int v0, int v1) {
    toolBar.setPagePosition(v0, v1);
    return this;
  }

  public ToolBarBuilder shadow(boolean v0) {
    toolBar.setShadow(v0);
    return this;
  }

  public ToolBarBuilder stateful(boolean v0) {
    toolBar.setStateful(v0);
    return this;
  }

  public ToolBarBuilder stateId(java.lang.String v0) {
    toolBar.setStateId(v0);
    return this;
  }

  public ToolBarBuilder tabIndex(int v0) {
    toolBar.setTabIndex(v0);
    return this;
  }

  public ToolBarBuilder toolTip(java.lang.String v0) {
    toolBar.setToolTip(v0);
    return this;
  }

  public ToolBarBuilder toolTipConfig(com.sencha.gxt.widget.core.client.tips.ToolTipConfig v0) {
    toolBar.setToolTipConfig(v0);
    return this;
  }

  public ToolBarBuilder width(int v0) {
    toolBar.setWidth(v0);
    return this;
  }

  public ToolBarBuilder width(java.lang.String v0) {
    toolBar.setWidth(v0);
    return this;
  }

  public ToolBarBuilder layoutData(java.lang.Object v0) {
    toolBar.setLayoutData(v0);
    return this;
  }

  public ToolBarBuilder styleName(java.lang.String v0, boolean v1) {
    toolBar.setStyleName(v0, v1);
    return this;
  }

  public ToolBarBuilder styleName(java.lang.String v0) {
    toolBar.setStyleName(v0);
    return this;
  }

  public ToolBarBuilder addStyleName(java.lang.String v0) {
    toolBar.addStyleName(v0);
    return this;
  }

  public ToolBarBuilder addStyleDependentName(java.lang.String v0) {
    toolBar.addStyleDependentName(v0);
    return this;
  }

  public ToolBarBuilder styleDependentName(java.lang.String v0, boolean v1) {
    toolBar.setStyleDependentName(v0, v1);
    return this;
  }

  public ToolBarBuilder stylePrimaryName(java.lang.String v0) {
    toolBar.setStylePrimaryName(v0);
    return this;
  }

  public ToolBarBuilder title(java.lang.String v0) {
    toolBar.setTitle(v0);
    return this;
  }
}
