package biz.freshcode.learn.gwt.client.uispike.builder;

import com.sencha.gxt.widget.core.client.button.TextButton;

// Generated by BeanBuilderGenerator
@BeanBuilder(TextButton.class)
public class TextButtonBuilder {
    public final TextButton textButton;

    public TextButtonBuilder() {
        this(new TextButton());
    }

    public TextButtonBuilder(TextButton v) {
        textButton = v;
    }

    public TextButtonBuilder text(java.lang.String v0) {
        textButton.setText(v0);
        return this;
    }

    public TextButtonBuilder icon(com.google.gwt.resources.client.ImageResource v0) {
        textButton.setIcon(v0);
        return this;
    }

    public TextButtonBuilder arrowAlign(com.sencha.gxt.cell.core.client.ButtonCell.ButtonArrowAlign v0) {
        textButton.setArrowAlign(v0);
        return this;
    }

    public TextButtonBuilder hTML(com.google.gwt.safehtml.shared.SafeHtml v0) {
        textButton.setHTML(v0);
        return this;
    }

    public TextButtonBuilder hTML(java.lang.String v0) {
        textButton.setHTML(v0);
        return this;
    }

    public TextButtonBuilder iconAlign(com.sencha.gxt.cell.core.client.ButtonCell.IconAlign v0) {
        textButton.setIconAlign(v0);
        return this;
    }

    public TextButtonBuilder menu(com.sencha.gxt.widget.core.client.menu.Menu v0) {
        textButton.setMenu(v0);
        return this;
    }

    public TextButtonBuilder menuAlign(com.sencha.gxt.core.client.Style.AnchorAlignment v0) {
        textButton.setMenuAlign(v0);
        return this;
    }

    public TextButtonBuilder minWidth(int v0) {
        textButton.setMinWidth(v0);
        return this;
    }

    public TextButtonBuilder mouseEvents(boolean v0) {
        textButton.setMouseEvents(v0);
        return this;
    }

    public TextButtonBuilder scale(com.sencha.gxt.cell.core.client.ButtonCell.ButtonScale v0) {
        textButton.setScale(v0);
        return this;
    }

/* Generics too hard at the moment
  public TextButtonBuilder value(java.lang.Object v0) {
    textButton.setValue(v0);
    return this;
  }
*/

/* Generics too hard at the moment
  public TextButtonBuilder value(java.lang.Object v0, boolean v1) {
    textButton.setValue(v0, v1);
    return this;
  }
*/

/* Generics too hard at the moment
  public TextButtonBuilder value(java.lang.Object v0, boolean v1, boolean v2) {
    textButton.setValue(v0, v1, v2);
    return this;
  }
*/

    public TextButtonBuilder size(java.lang.String v0, java.lang.String v1) {
        textButton.setSize(v0, v1);
        return this;
    }

    public TextButtonBuilder allowTextSelection(boolean v0) {
        textButton.setAllowTextSelection(v0);
        return this;
    }

    public TextButtonBuilder position(int v0, int v1) {
        textButton.setPosition(v0, v1);
        return this;
    }

    public TextButtonBuilder addStyleOnOver(com.google.gwt.dom.client.Element v0, java.lang.String v1) {
        textButton.addStyleOnOver(v0, v1);
        return this;
    }

    public TextButtonBuilder borders(boolean v0) {
        textButton.setBorders(v0);
        return this;
    }

    public TextButtonBuilder bounds(int v0, int v1, int v2, int v3) {
        textButton.setBounds(v0, v1, v2, v3);
        return this;
    }

    public TextButtonBuilder bounds(com.sencha.gxt.core.client.util.Rectangle v0) {
        textButton.setBounds(v0);
        return this;
    }

    public TextButtonBuilder contextMenu(com.sencha.gxt.widget.core.client.menu.Menu v0) {
        textButton.setContextMenu(v0);
        return this;
    }

    public TextButtonBuilder data(java.lang.String v0, java.lang.Object v1) {
        textButton.setData(v0, v1);
        return this;
    }

    public TextButtonBuilder deferHeight(boolean v0) {
        textButton.setDeferHeight(v0);
        return this;
    }

    public TextButtonBuilder enabled(boolean v0) {
        textButton.setEnabled(v0);
        return this;
    }

    public TextButtonBuilder height(int v0) {
        textButton.setHeight(v0);
        return this;
    }

    public TextButtonBuilder height(java.lang.String v0) {
        textButton.setHeight(v0);
        return this;
    }

    public TextButtonBuilder hideMode(com.sencha.gxt.core.client.Style.HideMode v0) {
        textButton.setHideMode(v0);
        return this;
    }

    public TextButtonBuilder id(java.lang.String v0) {
        textButton.setId(v0);
        return this;
    }

    public TextButtonBuilder itemId(java.lang.String v0) {
        textButton.setItemId(v0);
        return this;
    }

    public TextButtonBuilder pagePosition(int v0, int v1) {
        textButton.setPagePosition(v0, v1);
        return this;
    }

    public TextButtonBuilder pixelSize(int v0, int v1) {
        textButton.setPixelSize(v0, v1);
        return this;
    }

    public TextButtonBuilder shadow(boolean v0) {
        textButton.setShadow(v0);
        return this;
    }

    public TextButtonBuilder stateful(boolean v0) {
        textButton.setStateful(v0);
        return this;
    }

    public TextButtonBuilder stateId(java.lang.String v0) {
        textButton.setStateId(v0);
        return this;
    }

    public TextButtonBuilder tabIndex(int v0) {
        textButton.setTabIndex(v0);
        return this;
    }

    public TextButtonBuilder toolTip(java.lang.String v0) {
        textButton.setToolTip(v0);
        return this;
    }

    public TextButtonBuilder toolTipConfig(com.sencha.gxt.widget.core.client.tips.ToolTipConfig v0) {
        textButton.setToolTipConfig(v0);
        return this;
    }

    public TextButtonBuilder visible(boolean v0) {
        textButton.setVisible(v0);
        return this;
    }

    public TextButtonBuilder width(int v0) {
        textButton.setWidth(v0);
        return this;
    }

    public TextButtonBuilder width(java.lang.String v0) {
        textButton.setWidth(v0);
        return this;
    }

    public TextButtonBuilder layoutData(java.lang.Object v0) {
        textButton.setLayoutData(v0);
        return this;
    }

    public TextButtonBuilder addStyleDependentName(java.lang.String v0) {
        textButton.addStyleDependentName(v0);
        return this;
    }

    public TextButtonBuilder styleDependentName(java.lang.String v0, boolean v1) {
        textButton.setStyleDependentName(v0, v1);
        return this;
    }

    public TextButtonBuilder addStyleName(java.lang.String v0) {
        textButton.addStyleName(v0);
        return this;
    }

    public TextButtonBuilder styleName(java.lang.String v0, boolean v1) {
        textButton.setStyleName(v0, v1);
        return this;
    }

    public TextButtonBuilder styleName(java.lang.String v0) {
        textButton.setStyleName(v0);
        return this;
    }

    public TextButtonBuilder stylePrimaryName(java.lang.String v0) {
        textButton.setStylePrimaryName(v0);
        return this;
    }

    public TextButtonBuilder title(java.lang.String v0) {
        textButton.setTitle(v0);
        return this;
    }
}
