package biz.freshcode.learn.gwt.client.uispike.builder;

import com.sencha.gxt.widget.core.client.grid.Grid;

// Generated by BeanBuilderGenerator
@BeanBuilder(Grid.class)
public class GridBuilder {
    public final Grid grid;

    public GridBuilder(Grid v) {
        grid = v;
    }

    public GridBuilder allowTextSelection(boolean v0) {
        grid.setAllowTextSelection(v0);
        return this;
    }

    public GridBuilder columnReordering(boolean v0) {
        grid.setColumnReordering(v0);
        return this;
    }

    public GridBuilder columnResize(boolean v0) {
        grid.setColumnResize(v0);
        return this;
    }

    public GridBuilder hideHeaders(boolean v0) {
        grid.setHideHeaders(v0);
        return this;
    }

    public GridBuilder lazyRowRender(int v0) {
        grid.setLazyRowRender(v0);
        return this;
    }

    public GridBuilder loader(com.sencha.gxt.data.shared.loader.ListLoader v0) {
        grid.setLoader(v0);
        return this;
    }

    public GridBuilder loadMask(boolean v0) {
        grid.setLoadMask(v0);
        return this;
    }

    public GridBuilder minColumnWidth(int v0) {
        grid.setMinColumnWidth(v0);
        return this;
    }

    public GridBuilder selectionModel(com.sencha.gxt.widget.core.client.grid.GridSelectionModel v0) {
        grid.setSelectionModel(v0);
        return this;
    }

    public GridBuilder view(com.sencha.gxt.widget.core.client.grid.GridView v0) {
        grid.setView(v0);
        return this;
    }

    public GridBuilder size(java.lang.String v0, java.lang.String v1) {
        grid.setSize(v0, v1);
        return this;
    }

    public GridBuilder tabIndex(int v0) {
        grid.setTabIndex(v0);
        return this;
    }

    public GridBuilder addStyleOnOver(com.google.gwt.dom.client.Element v0, java.lang.String v1) {
        grid.addStyleOnOver(v0, v1);
        return this;
    }

    public GridBuilder borders(boolean v0) {
        grid.setBorders(v0);
        return this;
    }

    public GridBuilder bounds(int v0, int v1, int v2, int v3) {
        grid.setBounds(v0, v1, v2, v3);
        return this;
    }

    public GridBuilder bounds(com.sencha.gxt.core.client.util.Rectangle v0) {
        grid.setBounds(v0);
        return this;
    }

    public GridBuilder contextMenu(com.sencha.gxt.widget.core.client.menu.Menu v0) {
        grid.setContextMenu(v0);
        return this;
    }

    public GridBuilder data(java.lang.String v0, java.lang.Object v1) {
        grid.setData(v0, v1);
        return this;
    }

    public GridBuilder deferHeight(boolean v0) {
        grid.setDeferHeight(v0);
        return this;
    }

    public GridBuilder enabled(boolean v0) {
        grid.setEnabled(v0);
        return this;
    }

    public GridBuilder height(int v0) {
        grid.setHeight(v0);
        return this;
    }

    public GridBuilder height(java.lang.String v0) {
        grid.setHeight(v0);
        return this;
    }

    public GridBuilder hideMode(com.sencha.gxt.core.client.Style.HideMode v0) {
        grid.setHideMode(v0);
        return this;
    }

    public GridBuilder id(java.lang.String v0) {
        grid.setId(v0);
        return this;
    }

    public GridBuilder itemId(java.lang.String v0) {
        grid.setItemId(v0);
        return this;
    }

    public GridBuilder pagePosition(int v0, int v1) {
        grid.setPagePosition(v0, v1);
        return this;
    }

    public GridBuilder pixelSize(int v0, int v1) {
        grid.setPixelSize(v0, v1);
        return this;
    }

    public GridBuilder position(int v0, int v1) {
        grid.setPosition(v0, v1);
        return this;
    }

    public GridBuilder shadow(boolean v0) {
        grid.setShadow(v0);
        return this;
    }

    public GridBuilder stateful(boolean v0) {
        grid.setStateful(v0);
        return this;
    }

    public GridBuilder stateId(java.lang.String v0) {
        grid.setStateId(v0);
        return this;
    }

    public GridBuilder toolTip(java.lang.String v0) {
        grid.setToolTip(v0);
        return this;
    }

    public GridBuilder toolTipConfig(com.sencha.gxt.widget.core.client.tips.ToolTipConfig v0) {
        grid.setToolTipConfig(v0);
        return this;
    }

    public GridBuilder visible(boolean v0) {
        grid.setVisible(v0);
        return this;
    }

    public GridBuilder width(int v0) {
        grid.setWidth(v0);
        return this;
    }

    public GridBuilder width(java.lang.String v0) {
        grid.setWidth(v0);
        return this;
    }

    public GridBuilder layoutData(java.lang.Object v0) {
        grid.setLayoutData(v0);
        return this;
    }

    public GridBuilder addStyleDependentName(java.lang.String v0) {
        grid.addStyleDependentName(v0);
        return this;
    }

    public GridBuilder styleDependentName(java.lang.String v0, boolean v1) {
        grid.setStyleDependentName(v0, v1);
        return this;
    }

    public GridBuilder addStyleName(java.lang.String v0) {
        grid.addStyleName(v0);
        return this;
    }

    public GridBuilder styleName(java.lang.String v0, boolean v1) {
        grid.setStyleName(v0, v1);
        return this;
    }

    public GridBuilder styleName(java.lang.String v0) {
        grid.setStyleName(v0);
        return this;
    }

    public GridBuilder stylePrimaryName(java.lang.String v0) {
        grid.setStylePrimaryName(v0);
        return this;
    }

    public GridBuilder title(java.lang.String v0) {
        grid.setTitle(v0);
        return this;
    }
}
