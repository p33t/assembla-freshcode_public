package biz.freshcode.learn.gwt2.common.client.builder.gxt.form;

import com.sencha.gxt.widget.core.client.form.CheckBox;

/**
 * Generated by BeanBuilderGenerator
 *
 * @see com.sencha.gxt.widget.core.client.form.CheckBox
 */
@SuppressWarnings("UnusedDeclaration")
@biz.freshcode.learn.gwt2.common.client.builder.BeanBuilder(CheckBox.class)
public class CheckBoxBuilder extends biz.freshcode.learn.gwt2.common.client.builder.Construct.Parent<CheckBoxBuilder> {
    public final CheckBox checkBox;

    public CheckBoxBuilder(CheckBox v) {
        checkBox = v;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.CheckBox#CheckBox(com.sencha.gxt.cell.core.client.form.CheckBoxCell)
     */
    public CheckBoxBuilder(com.sencha.gxt.cell.core.client.form.CheckBoxCell v0) {
        this(new CheckBox(v0));
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.CheckBox#CheckBox()
     */
    public CheckBoxBuilder() {
        this(new CheckBox());
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.CheckBox#addStyleDependentName(java.lang.String)
     */
    public CheckBoxBuilder addStyleDependentName(java.lang.String v0) {
        checkBox.addStyleDependentName(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.CheckBox#addStyleName(java.lang.String)
     */
    public CheckBoxBuilder addStyleName(java.lang.String v0) {
        checkBox.addStyleName(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.CheckBox#addStyleOnOver(com.google.gwt.dom.client.Element, java.lang.String)
     */
    public CheckBoxBuilder addStyleOnOver(com.google.gwt.dom.client.Element v0, java.lang.String v1) {
        checkBox.addStyleOnOver(v0, v1);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.CheckBox#addValidator(com.sencha.gxt.widget.core.client.form.Validator)
     */
    public CheckBoxBuilder addValidator(com.sencha.gxt.widget.core.client.form.Validator<Boolean> v0) {
        checkBox.addValidator(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.CheckBox#setAllowTextSelection(boolean)
     */
    public CheckBoxBuilder allowTextSelection(boolean v0) {
        checkBox.setAllowTextSelection(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.CheckBox#setAutoValidate(boolean)
     */
    public CheckBoxBuilder autoValidate(boolean v0) {
        checkBox.setAutoValidate(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.CheckBox#setBorders(boolean)
     */
    public CheckBoxBuilder borders(boolean v0) {
        checkBox.setBorders(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.CheckBox#setBounds(com.sencha.gxt.core.client.util.Rectangle)
     */
    public CheckBoxBuilder bounds(com.sencha.gxt.core.client.util.Rectangle v0) {
        checkBox.setBounds(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.CheckBox#setBounds(int, int, int, int)
     */
    public CheckBoxBuilder bounds(int v0, int v1, int v2, int v3) {
        checkBox.setBounds(v0, v1, v2, v3);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.CheckBox#setBoxLabel(java.lang.String)
     */
    public CheckBoxBuilder boxLabel(java.lang.String v0) {
        checkBox.setBoxLabel(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.CheckBox#setContextMenu(com.sencha.gxt.widget.core.client.menu.Menu)
     */
    public CheckBoxBuilder contextMenu(com.sencha.gxt.widget.core.client.menu.Menu v0) {
        checkBox.setContextMenu(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.CheckBox#setData(java.lang.String, java.lang.Object)
     */
    public CheckBoxBuilder data(java.lang.String v0, java.lang.Object v1) {
        checkBox.setData(v0, v1);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.CheckBox#setDeferHeight(boolean)
     */
    public CheckBoxBuilder deferHeight(boolean v0) {
        checkBox.setDeferHeight(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.CheckBox#setDelegate(com.google.gwt.editor.client.EditorDelegate)
     */
    public CheckBoxBuilder delegate(com.google.gwt.editor.client.EditorDelegate<Boolean> v0) {
        checkBox.setDelegate(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.CheckBox#setEnabled(boolean)
     */
    public CheckBoxBuilder enabled(boolean v0) {
        checkBox.setEnabled(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.CheckBox#setErrorSupport(com.sencha.gxt.widget.core.client.form.error.ErrorHandler)
     */
    public CheckBoxBuilder errorSupport(com.sencha.gxt.widget.core.client.form.error.ErrorHandler v0) {
        checkBox.setErrorSupport(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.CheckBox#setHeight(java.lang.String)
     */
    public CheckBoxBuilder height(java.lang.String v0) {
        checkBox.setHeight(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.CheckBox#setHeight(int)
     */
    public CheckBoxBuilder height(int v0) {
        checkBox.setHeight(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.CheckBox#setHideMode(com.sencha.gxt.core.client.Style.HideMode)
     */
    public CheckBoxBuilder hideMode(com.sencha.gxt.core.client.Style.HideMode v0) {
        checkBox.setHideMode(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.CheckBox#setId(java.lang.String)
     */
    public CheckBoxBuilder id(java.lang.String v0) {
        checkBox.setId(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.CheckBox#setItemId(java.lang.String)
     */
    public CheckBoxBuilder itemId(java.lang.String v0) {
        checkBox.setItemId(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.CheckBox#setLayoutData(java.lang.Object)
     */
    public CheckBoxBuilder layoutData(java.lang.Object v0) {
        checkBox.setLayoutData(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.CheckBox#setName(java.lang.String)
     */
    public CheckBoxBuilder name(java.lang.String v0) {
        checkBox.setName(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.CheckBox#setOriginalValue(Object)
     */
    public CheckBoxBuilder originalValue(Boolean v0) {
        checkBox.setOriginalValue(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.CheckBox#setPagePosition(int, int)
     */
    public CheckBoxBuilder pagePosition(int v0, int v1) {
        checkBox.setPagePosition(v0, v1);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.CheckBox#setPixelSize(int, int)
     */
    public CheckBoxBuilder pixelSize(int v0, int v1) {
        checkBox.setPixelSize(v0, v1);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.CheckBox#setPosition(int, int)
     */
    public CheckBoxBuilder position(int v0, int v1) {
        checkBox.setPosition(v0, v1);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.CheckBox#setReadOnly(boolean)
     */
    public CheckBoxBuilder readOnly(boolean v0) {
        checkBox.setReadOnly(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.CheckBox#setShadow(boolean)
     */
    public CheckBoxBuilder shadow(boolean v0) {
        checkBox.setShadow(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.CheckBox#setShadowPosition(com.sencha.gxt.core.client.dom.Layer.ShadowPosition)
     */
    public CheckBoxBuilder shadowPosition(com.sencha.gxt.core.client.dom.Layer.ShadowPosition v0) {
        checkBox.setShadowPosition(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.CheckBox#setSize(java.lang.String, java.lang.String)
     */
    public CheckBoxBuilder size(java.lang.String v0, java.lang.String v1) {
        checkBox.setSize(v0, v1);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.CheckBox#setStateId(java.lang.String)
     */
    public CheckBoxBuilder stateId(java.lang.String v0) {
        checkBox.setStateId(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.CheckBox#setStateful(boolean)
     */
    public CheckBoxBuilder stateful(boolean v0) {
        checkBox.setStateful(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.CheckBox#setStyleDependentName(java.lang.String, boolean)
     */
    public CheckBoxBuilder styleDependentName(java.lang.String v0, boolean v1) {
        checkBox.setStyleDependentName(v0, v1);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.CheckBox#setStyleName(java.lang.String)
     */
    public CheckBoxBuilder styleName(java.lang.String v0) {
        checkBox.setStyleName(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.CheckBox#setStyleName(java.lang.String, boolean)
     */
    public CheckBoxBuilder styleName(java.lang.String v0, boolean v1) {
        checkBox.setStyleName(v0, v1);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.CheckBox#setStylePrimaryName(java.lang.String)
     */
    public CheckBoxBuilder stylePrimaryName(java.lang.String v0) {
        checkBox.setStylePrimaryName(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.CheckBox#setTabIndex(int)
     */
    public CheckBoxBuilder tabIndex(int v0) {
        checkBox.setTabIndex(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.CheckBox#setTitle(java.lang.String)
     */
    public CheckBoxBuilder title(java.lang.String v0) {
        checkBox.setTitle(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.CheckBox#setToolTip(java.lang.String)
     */
    public CheckBoxBuilder toolTip(java.lang.String v0) {
        checkBox.setToolTip(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.CheckBox#setToolTipConfig(com.sencha.gxt.widget.core.client.tips.ToolTipConfig)
     */
    public CheckBoxBuilder toolTipConfig(com.sencha.gxt.widget.core.client.tips.ToolTipConfig v0) {
        checkBox.setToolTipConfig(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.CheckBox#setValidateOnBlur(boolean)
     */
    public CheckBoxBuilder validateOnBlur(boolean v0) {
        checkBox.setValidateOnBlur(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.CheckBox#setValidationDelay(int)
     */
    public CheckBoxBuilder validationDelay(int v0) {
        checkBox.setValidationDelay(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.CheckBox#setValue(java.lang.Boolean)
     */
    public CheckBoxBuilder value(java.lang.Boolean v0) {
        checkBox.setValue(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.CheckBox#setValue(Object, boolean)
     */
    public CheckBoxBuilder value(Boolean v0, boolean v1) {
        checkBox.setValue(v0, v1);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.CheckBox#setValue(Object, boolean, boolean)
     */
    public CheckBoxBuilder value(Boolean v0, boolean v1, boolean v2) {
        checkBox.setValue(v0, v1, v2);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.CheckBox#setVisible(boolean)
     */
    public CheckBoxBuilder visible(boolean v0) {
        checkBox.setVisible(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.CheckBox#setWidth(java.lang.String)
     */
    public CheckBoxBuilder width(java.lang.String v0) {
        checkBox.setWidth(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.CheckBox#setWidth(int)
     */
    public CheckBoxBuilder width(int v0) {
        checkBox.setWidth(v0);
        return this;
    }
}
