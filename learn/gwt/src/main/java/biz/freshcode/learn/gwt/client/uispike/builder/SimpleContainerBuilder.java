package biz.freshcode.learn.gwt.client.uispike.builder;

import com.sencha.gxt.widget.core.client.container.SimpleContainer;
import biz.freshcode.learn.gwt.client.uispike.builder.BeanBuilder;

// Generated by BeanBuilderGenerator
@BeanBuilder(SimpleContainer.class)
public class SimpleContainerBuilder {
    public final SimpleContainer simpleContainer;

    public SimpleContainerBuilder() {
        this(new SimpleContainer());
    }

    public SimpleContainerBuilder(SimpleContainer v) {
        simpleContainer = v;
    }

    public SimpleContainerBuilder resize(boolean v0) {
        simpleContainer.setResize(v0);
        return this;
    }

    public SimpleContainerBuilder widget(com.google.gwt.user.client.ui.IsWidget v0) {
        simpleContainer.setWidget(v0);
        return this;
    }

    public SimpleContainerBuilder widget(com.google.gwt.user.client.ui.Widget v0) {
        simpleContainer.setWidget(v0);
        return this;
    }

    public SimpleContainerBuilder size(java.lang.String v0, java.lang.String v1) {
        simpleContainer.setSize(v0, v1);
        return this;
    }

    public SimpleContainerBuilder pixelSize(int v0, int v1) {
        simpleContainer.setPixelSize(v0, v1);
        return this;
    }

    public SimpleContainerBuilder position(int v0, int v1) {
        simpleContainer.setPosition(v0, v1);
        return this;
    }

    public SimpleContainerBuilder allowTextSelection(boolean v0) {
        simpleContainer.setAllowTextSelection(v0);
        return this;
    }

    public SimpleContainerBuilder borders(boolean v0) {
        simpleContainer.setBorders(v0);
        return this;
    }

    public SimpleContainerBuilder bounds(int v0, int v1, int v2, int v3) {
        simpleContainer.setBounds(v0, v1, v2, v3);
        return this;
    }

    public SimpleContainerBuilder bounds(com.sencha.gxt.core.client.util.Rectangle v0) {
        simpleContainer.setBounds(v0);
        return this;
    }

    public SimpleContainerBuilder contextMenu(com.sencha.gxt.widget.core.client.menu.Menu v0) {
        simpleContainer.setContextMenu(v0);
        return this;
    }

    public SimpleContainerBuilder data(java.lang.String v0, java.lang.Object v1) {
        simpleContainer.setData(v0, v1);
        return this;
    }

    public SimpleContainerBuilder deferHeight(boolean v0) {
        simpleContainer.setDeferHeight(v0);
        return this;
    }

    public SimpleContainerBuilder enabled(boolean v0) {
        simpleContainer.setEnabled(v0);
        return this;
    }

    public SimpleContainerBuilder height(int v0) {
        simpleContainer.setHeight(v0);
        return this;
    }

    public SimpleContainerBuilder height(java.lang.String v0) {
        simpleContainer.setHeight(v0);
        return this;
    }

    public SimpleContainerBuilder hideMode(com.sencha.gxt.core.client.Style.HideMode v0) {
        simpleContainer.setHideMode(v0);
        return this;
    }

    public SimpleContainerBuilder id(java.lang.String v0) {
        simpleContainer.setId(v0);
        return this;
    }

    public SimpleContainerBuilder itemId(java.lang.String v0) {
        simpleContainer.setItemId(v0);
        return this;
    }

    public SimpleContainerBuilder pagePosition(int v0, int v1) {
        simpleContainer.setPagePosition(v0, v1);
        return this;
    }

    public SimpleContainerBuilder shadow(boolean v0) {
        simpleContainer.setShadow(v0);
        return this;
    }

    public SimpleContainerBuilder stateful(boolean v0) {
        simpleContainer.setStateful(v0);
        return this;
    }

    public SimpleContainerBuilder stateId(java.lang.String v0) {
        simpleContainer.setStateId(v0);
        return this;
    }

    public SimpleContainerBuilder tabIndex(int v0) {
        simpleContainer.setTabIndex(v0);
        return this;
    }

    public SimpleContainerBuilder toolTip(java.lang.String v0) {
        simpleContainer.setToolTip(v0);
        return this;
    }

    public SimpleContainerBuilder toolTipConfig(com.sencha.gxt.widget.core.client.tips.ToolTipConfig v0) {
        simpleContainer.setToolTipConfig(v0);
        return this;
    }

    public SimpleContainerBuilder visible(boolean v0) {
        simpleContainer.setVisible(v0);
        return this;
    }

    public SimpleContainerBuilder width(int v0) {
        simpleContainer.setWidth(v0);
        return this;
    }

    public SimpleContainerBuilder width(java.lang.String v0) {
        simpleContainer.setWidth(v0);
        return this;
    }

    public SimpleContainerBuilder layoutData(java.lang.Object v0) {
        simpleContainer.setLayoutData(v0);
        return this;
    }

    public SimpleContainerBuilder styleDependentName(java.lang.String v0, boolean v1) {
        simpleContainer.setStyleDependentName(v0, v1);
        return this;
    }

    public SimpleContainerBuilder styleName(java.lang.String v0, boolean v1) {
        simpleContainer.setStyleName(v0, v1);
        return this;
    }

    public SimpleContainerBuilder styleName(java.lang.String v0) {
        simpleContainer.setStyleName(v0);
        return this;
    }

    public SimpleContainerBuilder stylePrimaryName(java.lang.String v0) {
        simpleContainer.setStylePrimaryName(v0);
        return this;
    }

    public SimpleContainerBuilder title(java.lang.String v0) {
        simpleContainer.setTitle(v0);
        return this;
    }

    public SimpleContainerBuilder initFrom(SimpleContainer v) {
        return this
                .widget(v.getWidget())
                .hideMode(v.getHideMode())
                .id(v.getId())
                .itemId(v.getItemId())
                .shadow(v.getShadow())
                .stateId(v.getStateId())
                .layoutData(v.getLayoutData())
                .styleName(v.getStyleName())
                .stylePrimaryName(v.getStylePrimaryName())
                .title(v.getTitle());
    }
}
