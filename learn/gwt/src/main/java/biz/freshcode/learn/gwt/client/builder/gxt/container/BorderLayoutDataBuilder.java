package biz.freshcode.learn.gwt.client.builder.gxt.container;

import biz.freshcode.learn.gwt.client.builder.BeanBuilder;
import biz.freshcode.learn.gwt.client.builder.Construct;
import com.sencha.gxt.widget.core.client.container.BorderLayoutContainer.BorderLayoutData;

/**
 * Generated by BeanBuilderGenerator
 *
 * @see com.sencha.gxt.widget.core.client.container.BorderLayoutContainer.BorderLayoutData
 */
@BeanBuilder(BorderLayoutData.class)
@SuppressWarnings("UnusedDeclaration")
public class BorderLayoutDataBuilder extends Construct.Parent<BorderLayoutDataBuilder> {
    public final BorderLayoutData borderLayoutData;

    public BorderLayoutDataBuilder(BorderLayoutData v) {
        borderLayoutData = v;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.container.BorderLayoutContainer.BorderLayoutData#BorderLayoutData()
     */
    public BorderLayoutDataBuilder() {
        this(new BorderLayoutData());
    }

    /**
     * @see com.sencha.gxt.widget.core.client.container.BorderLayoutContainer.BorderLayoutData#BorderLayoutData(double)
     */
    public BorderLayoutDataBuilder(double v0) {
        this(new BorderLayoutData(v0));
    }

    /**
     * @see com.sencha.gxt.widget.core.client.container.BorderLayoutContainer.BorderLayoutData#setCollapseHidden(boolean)
     */
    public BorderLayoutDataBuilder collapseHidden(boolean v0) {
        borderLayoutData.setCollapseHidden(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.container.BorderLayoutContainer.BorderLayoutData#setCollapseMini(boolean)
     */
    public BorderLayoutDataBuilder collapseMini(boolean v0) {
        borderLayoutData.setCollapseMini(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.container.BorderLayoutContainer.BorderLayoutData#setCollapsed(boolean)
     */
    public BorderLayoutDataBuilder collapsed(boolean v0) {
        borderLayoutData.setCollapsed(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.container.BorderLayoutContainer.BorderLayoutData#setCollapsible(boolean)
     */
    public BorderLayoutDataBuilder collapsible(boolean v0) {
        borderLayoutData.setCollapsible(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.container.BorderLayoutContainer.BorderLayoutData#setFloatable(boolean)
     */
    public BorderLayoutDataBuilder floatable(boolean v0) {
        borderLayoutData.setFloatable(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.container.BorderLayoutContainer.BorderLayoutData#setHidden(boolean)
     */
    public BorderLayoutDataBuilder hidden(boolean v0) {
        borderLayoutData.setHidden(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.container.BorderLayoutContainer.BorderLayoutData#setMargins(com.sencha.gxt.core.client.util.Margins)
     */
    public BorderLayoutDataBuilder margins(com.sencha.gxt.core.client.util.Margins v0) {
        borderLayoutData.setMargins(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.container.BorderLayoutContainer.BorderLayoutData#setMaxSize(int)
     */
    public BorderLayoutDataBuilder maxSize(int v0) {
        borderLayoutData.setMaxSize(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.container.BorderLayoutContainer.BorderLayoutData#setMinSize(int)
     */
    public BorderLayoutDataBuilder minSize(int v0) {
        borderLayoutData.setMinSize(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.container.BorderLayoutContainer.BorderLayoutData#setSize(double)
     */
    public BorderLayoutDataBuilder size(double v0) {
        borderLayoutData.setSize(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.container.BorderLayoutContainer.BorderLayoutData#setSplit(boolean)
     */
    public BorderLayoutDataBuilder split(boolean v0) {
        borderLayoutData.setSplit(v0);
        return this;
    }
}
