package biz.freshcode.learn.gwt2.common.client.builder.gxt.container;

import com.sencha.gxt.widget.core.client.container.CssFloatLayoutContainer;

/**
 * Generated by BeanBuilderGenerator
 *
 * @see com.sencha.gxt.widget.core.client.container.CssFloatLayoutContainer
 */
@SuppressWarnings("UnusedDeclaration")
@biz.freshcode.learn.gwt2.common.client.builder.BeanBuilder(CssFloatLayoutContainer.class)
public class CssFloatLayoutContainerBuilder extends biz.freshcode.learn.gwt2.common.client.builder.Construct.Parent<CssFloatLayoutContainerBuilder> {
    public final CssFloatLayoutContainer cssFloatLayoutContainer;

    public CssFloatLayoutContainerBuilder(CssFloatLayoutContainer v) {
        cssFloatLayoutContainer = v;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.container.CssFloatLayoutContainer#CssFloatLayoutContainer()
     */
    public CssFloatLayoutContainerBuilder() {
        this(new CssFloatLayoutContainer());
    }

    /**
     * @see com.sencha.gxt.widget.core.client.container.CssFloatLayoutContainer#CssFloatLayoutContainer(com.sencha.gxt.widget.core.client.container.CssFloatLayoutContainer.CssFloatLayoutAppearance)
     */
    public CssFloatLayoutContainerBuilder(com.sencha.gxt.widget.core.client.container.CssFloatLayoutContainer.CssFloatLayoutAppearance v0) {
        this(new CssFloatLayoutContainer(v0));
    }

    /**
     * @see com.sencha.gxt.widget.core.client.container.CssFloatLayoutContainer#add(com.google.gwt.user.client.ui.Widget)
     */
    public CssFloatLayoutContainerBuilder add(com.google.gwt.user.client.ui.Widget v0) {
        cssFloatLayoutContainer.add(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.container.CssFloatLayoutContainer#add(com.google.gwt.user.client.ui.IsWidget)
     */
    public CssFloatLayoutContainerBuilder add(com.google.gwt.user.client.ui.IsWidget v0) {
        cssFloatLayoutContainer.add(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.container.CssFloatLayoutContainer#add(com.google.gwt.user.client.ui.IsWidget, com.sencha.gxt.widget.core.client.container.CssFloatLayoutContainer.CssFloatData)
     */
    public CssFloatLayoutContainerBuilder add(com.google.gwt.user.client.ui.IsWidget v0, com.sencha.gxt.widget.core.client.container.CssFloatLayoutContainer.CssFloatData v1) {
        cssFloatLayoutContainer.add(v0, v1);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.container.CssFloatLayoutContainer#addGestureRecognizer(com.sencha.gxt.core.client.gestures.GestureRecognizer)
     */
    public CssFloatLayoutContainerBuilder addGestureRecognizer(com.sencha.gxt.core.client.gestures.GestureRecognizer v0) {
        cssFloatLayoutContainer.addGestureRecognizer(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.container.CssFloatLayoutContainer#addStyleDependentName(java.lang.String)
     */
    public CssFloatLayoutContainerBuilder addStyleDependentName(java.lang.String v0) {
        cssFloatLayoutContainer.addStyleDependentName(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.container.CssFloatLayoutContainer#addStyleName(java.lang.String)
     */
    public CssFloatLayoutContainerBuilder addStyleName(java.lang.String v0) {
        cssFloatLayoutContainer.addStyleName(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.container.CssFloatLayoutContainer#addStyleOnOver(com.google.gwt.dom.client.Element, java.lang.String)
     */
    public CssFloatLayoutContainerBuilder addStyleOnOver(com.google.gwt.dom.client.Element v0, java.lang.String v1) {
        cssFloatLayoutContainer.addStyleOnOver(v0, v1);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.container.CssFloatLayoutContainer#setAdjustForScroll(boolean)
     */
    public CssFloatLayoutContainerBuilder adjustForScroll(boolean v0) {
        cssFloatLayoutContainer.setAdjustForScroll(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.container.CssFloatLayoutContainer#setAdjustSize(boolean)
     */
    public CssFloatLayoutContainerBuilder adjustSize(boolean v0) {
        cssFloatLayoutContainer.setAdjustSize(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.container.CssFloatLayoutContainer#setAllowTextSelection(boolean)
     */
    public CssFloatLayoutContainerBuilder allowTextSelection(boolean v0) {
        cssFloatLayoutContainer.setAllowTextSelection(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.container.CssFloatLayoutContainer#setBorders(boolean)
     */
    public CssFloatLayoutContainerBuilder borders(boolean v0) {
        cssFloatLayoutContainer.setBorders(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.container.CssFloatLayoutContainer#setBounds(com.sencha.gxt.core.client.util.Rectangle)
     */
    public CssFloatLayoutContainerBuilder bounds(com.sencha.gxt.core.client.util.Rectangle v0) {
        cssFloatLayoutContainer.setBounds(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.container.CssFloatLayoutContainer#setBounds(int, int, int, int)
     */
    public CssFloatLayoutContainerBuilder bounds(int v0, int v1, int v2, int v3) {
        cssFloatLayoutContainer.setBounds(v0, v1, v2, v3);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.container.CssFloatLayoutContainer#setContextMenu(com.sencha.gxt.widget.core.client.menu.Menu)
     */
    public CssFloatLayoutContainerBuilder contextMenu(com.sencha.gxt.widget.core.client.menu.Menu v0) {
        cssFloatLayoutContainer.setContextMenu(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.container.CssFloatLayoutContainer#setData(java.lang.String, java.lang.Object)
     */
    public CssFloatLayoutContainerBuilder data(java.lang.String v0, java.lang.Object v1) {
        cssFloatLayoutContainer.setData(v0, v1);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.container.CssFloatLayoutContainer#setDeferHeight(boolean)
     */
    public CssFloatLayoutContainerBuilder deferHeight(boolean v0) {
        cssFloatLayoutContainer.setDeferHeight(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.container.CssFloatLayoutContainer#setEnabled(boolean)
     */
    public CssFloatLayoutContainerBuilder enabled(boolean v0) {
        cssFloatLayoutContainer.setEnabled(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.container.CssFloatLayoutContainer#setHeight(java.lang.String)
     */
    public CssFloatLayoutContainerBuilder height(java.lang.String v0) {
        cssFloatLayoutContainer.setHeight(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.container.CssFloatLayoutContainer#setHeight(int)
     */
    public CssFloatLayoutContainerBuilder height(int v0) {
        cssFloatLayoutContainer.setHeight(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.container.CssFloatLayoutContainer#setHideMode(com.sencha.gxt.core.client.Style.HideMode)
     */
    public CssFloatLayoutContainerBuilder hideMode(com.sencha.gxt.core.client.Style.HideMode v0) {
        cssFloatLayoutContainer.setHideMode(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.container.CssFloatLayoutContainer#setId(java.lang.String)
     */
    public CssFloatLayoutContainerBuilder id(java.lang.String v0) {
        cssFloatLayoutContainer.setId(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.container.CssFloatLayoutContainer#setItemId(java.lang.String)
     */
    public CssFloatLayoutContainerBuilder itemId(java.lang.String v0) {
        cssFloatLayoutContainer.setItemId(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.container.CssFloatLayoutContainer#setLayoutData(java.lang.Object)
     */
    public CssFloatLayoutContainerBuilder layoutData(java.lang.Object v0) {
        cssFloatLayoutContainer.setLayoutData(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.container.CssFloatLayoutContainer#setPagePosition(int, int)
     */
    public CssFloatLayoutContainerBuilder pagePosition(int v0, int v1) {
        cssFloatLayoutContainer.setPagePosition(v0, v1);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.container.CssFloatLayoutContainer#setPixelSize(int, int)
     */
    public CssFloatLayoutContainerBuilder pixelSize(int v0, int v1) {
        cssFloatLayoutContainer.setPixelSize(v0, v1);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.container.CssFloatLayoutContainer#setPosition(int, int)
     */
    public CssFloatLayoutContainerBuilder position(int v0, int v1) {
        cssFloatLayoutContainer.setPosition(v0, v1);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.container.CssFloatLayoutContainer#setScrollMode(com.sencha.gxt.core.client.dom.ScrollSupport.ScrollMode)
     */
    public CssFloatLayoutContainerBuilder scrollMode(com.sencha.gxt.core.client.dom.ScrollSupport.ScrollMode v0) {
        cssFloatLayoutContainer.setScrollMode(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.container.CssFloatLayoutContainer#setScrollSupport(com.sencha.gxt.core.client.dom.ScrollSupport)
     */
    public CssFloatLayoutContainerBuilder scrollSupport(com.sencha.gxt.core.client.dom.ScrollSupport v0) {
        cssFloatLayoutContainer.setScrollSupport(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.container.CssFloatLayoutContainer#setShadow(boolean)
     */
    public CssFloatLayoutContainerBuilder shadow(boolean v0) {
        cssFloatLayoutContainer.setShadow(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.container.CssFloatLayoutContainer#setShadowPosition(com.sencha.gxt.core.client.dom.Layer.ShadowPosition)
     */
    public CssFloatLayoutContainerBuilder shadowPosition(com.sencha.gxt.core.client.dom.Layer.ShadowPosition v0) {
        cssFloatLayoutContainer.setShadowPosition(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.container.CssFloatLayoutContainer#setSize(java.lang.String, java.lang.String)
     */
    public CssFloatLayoutContainerBuilder size(java.lang.String v0, java.lang.String v1) {
        cssFloatLayoutContainer.setSize(v0, v1);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.container.CssFloatLayoutContainer#setStateId(java.lang.String)
     */
    public CssFloatLayoutContainerBuilder stateId(java.lang.String v0) {
        cssFloatLayoutContainer.setStateId(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.container.CssFloatLayoutContainer#setStateful(boolean)
     */
    public CssFloatLayoutContainerBuilder stateful(boolean v0) {
        cssFloatLayoutContainer.setStateful(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.container.CssFloatLayoutContainer#setStyleDependentName(java.lang.String, boolean)
     */
    public CssFloatLayoutContainerBuilder styleDependentName(java.lang.String v0, boolean v1) {
        cssFloatLayoutContainer.setStyleDependentName(v0, v1);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.container.CssFloatLayoutContainer#setStyleFloat(com.google.gwt.dom.client.Style.Float)
     */
    public CssFloatLayoutContainerBuilder styleFloat(com.google.gwt.dom.client.Style.Float v0) {
        cssFloatLayoutContainer.setStyleFloat(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.container.CssFloatLayoutContainer#setStyleName(java.lang.String)
     */
    public CssFloatLayoutContainerBuilder styleName(java.lang.String v0) {
        cssFloatLayoutContainer.setStyleName(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.container.CssFloatLayoutContainer#setStyleName(java.lang.String, boolean)
     */
    public CssFloatLayoutContainerBuilder styleName(java.lang.String v0, boolean v1) {
        cssFloatLayoutContainer.setStyleName(v0, v1);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.container.CssFloatLayoutContainer#setStylePrimaryName(java.lang.String)
     */
    public CssFloatLayoutContainerBuilder stylePrimaryName(java.lang.String v0) {
        cssFloatLayoutContainer.setStylePrimaryName(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.container.CssFloatLayoutContainer#setTabIndex(int)
     */
    public CssFloatLayoutContainerBuilder tabIndex(int v0) {
        cssFloatLayoutContainer.setTabIndex(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.container.CssFloatLayoutContainer#setTitle(java.lang.String)
     */
    public CssFloatLayoutContainerBuilder title(java.lang.String v0) {
        cssFloatLayoutContainer.setTitle(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.container.CssFloatLayoutContainer#setToolTip(java.lang.String)
     */
    public CssFloatLayoutContainerBuilder toolTip(java.lang.String v0) {
        cssFloatLayoutContainer.setToolTip(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.container.CssFloatLayoutContainer#setToolTip(com.google.gwt.safehtml.shared.SafeHtml)
     */
    public CssFloatLayoutContainerBuilder toolTip(com.google.gwt.safehtml.shared.SafeHtml v0) {
        cssFloatLayoutContainer.setToolTip(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.container.CssFloatLayoutContainer#setToolTipConfig(com.sencha.gxt.widget.core.client.tips.ToolTipConfig)
     */
    public CssFloatLayoutContainerBuilder toolTipConfig(com.sencha.gxt.widget.core.client.tips.ToolTipConfig v0) {
        cssFloatLayoutContainer.setToolTipConfig(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.container.CssFloatLayoutContainer#setVisible(boolean)
     */
    public CssFloatLayoutContainerBuilder visible(boolean v0) {
        cssFloatLayoutContainer.setVisible(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.container.CssFloatLayoutContainer#setWidth(java.lang.String)
     */
    public CssFloatLayoutContainerBuilder width(java.lang.String v0) {
        cssFloatLayoutContainer.setWidth(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.container.CssFloatLayoutContainer#setWidth(int)
     */
    public CssFloatLayoutContainerBuilder width(int v0) {
        cssFloatLayoutContainer.setWidth(v0);
        return this;
    }
}
