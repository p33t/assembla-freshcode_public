package biz.freshcode.learn.gwt.common.client.builder.gxt.chart.axis;

import com.sencha.gxt.chart.client.chart.axis.CategoryAxis;

/**
 * Generated by BeanBuilderGenerator
 *
 * @see com.sencha.gxt.chart.client.chart.axis.CategoryAxis
 */
@SuppressWarnings("UnusedDeclaration")
@biz.freshcode.learn.gwt.common.client.builder.BeanBuilder(CategoryAxis.class)
public class CategoryAxisBuilder<M, V> extends biz.freshcode.learn.gwt.common.client.builder.Construct.Parent<CategoryAxisBuilder<M, V>> {
    public final CategoryAxis<M, V> categoryAxis;

    public CategoryAxisBuilder(CategoryAxis<M, V> v) {
        categoryAxis = v;
    }

    public CategoryAxisBuilder() {
        this(new CategoryAxis<M, V>());
    }

    /**
     * @see com.sencha.gxt.chart.client.chart.axis.CategoryAxis#setAxisConfig(com.sencha.gxt.chart.client.draw.path.PathSprite)
     */
    public CategoryAxisBuilder<M, V> axisConfig(com.sencha.gxt.chart.client.draw.path.PathSprite v0) {
        categoryAxis.setAxisConfig(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.chart.client.chart.axis.CategoryAxis#setChart(com.sencha.gxt.chart.client.chart.Chart)
     */
    public CategoryAxisBuilder<M, V> chart(com.sencha.gxt.chart.client.chart.Chart<M> v0) {
        categoryAxis.setChart(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.chart.client.chart.axis.CategoryAxis#setDashSize(int)
     */
    public CategoryAxisBuilder<M, V> dashSize(int v0) {
        categoryAxis.setDashSize(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.chart.client.chart.axis.CategoryAxis#setDepth(double)
     */
    public CategoryAxisBuilder<M, V> depth(double v0) {
        categoryAxis.setDepth(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.chart.client.chart.axis.CategoryAxis#setDisplayGrid(boolean)
     */
    public CategoryAxisBuilder<M, V> displayGrid(boolean v0) {
        categoryAxis.setDisplayGrid(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.chart.client.chart.axis.CategoryAxis#setField(com.sencha.gxt.core.client.ValueProvider)
     */
    public CategoryAxisBuilder<M, V> field(com.sencha.gxt.core.client.ValueProvider<? super M, V> v0) {
        categoryAxis.setField(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.chart.client.chart.axis.CategoryAxis#setGridDefaultConfig(com.sencha.gxt.chart.client.draw.path.PathSprite)
     */
    public CategoryAxisBuilder<M, V> gridDefaultConfig(com.sencha.gxt.chart.client.draw.path.PathSprite v0) {
        categoryAxis.setGridDefaultConfig(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.chart.client.chart.axis.CategoryAxis#setGridEvenConfig(com.sencha.gxt.chart.client.draw.path.PathSprite)
     */
    public CategoryAxisBuilder<M, V> gridEvenConfig(com.sencha.gxt.chart.client.draw.path.PathSprite v0) {
        categoryAxis.setGridEvenConfig(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.chart.client.chart.axis.CategoryAxis#setGridOddConfig(com.sencha.gxt.chart.client.draw.path.PathSprite)
     */
    public CategoryAxisBuilder<M, V> gridOddConfig(com.sencha.gxt.chart.client.draw.path.PathSprite v0) {
        categoryAxis.setGridOddConfig(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.chart.client.chart.axis.CategoryAxis#setHeight(double)
     */
    public CategoryAxisBuilder<M, V> height(double v0) {
        categoryAxis.setHeight(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.chart.client.chart.axis.CategoryAxis#setHidden(boolean)
     */
    public CategoryAxisBuilder<M, V> hidden(boolean v0) {
        categoryAxis.setHidden(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.chart.client.chart.axis.CategoryAxis#setLabelConfig(com.sencha.gxt.chart.client.draw.sprite.TextSprite)
     */
    public CategoryAxisBuilder<M, V> labelConfig(com.sencha.gxt.chart.client.draw.sprite.TextSprite v0) {
        categoryAxis.setLabelConfig(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.chart.client.chart.axis.CategoryAxis#setLabelOverlapHiding(boolean)
     */
    public CategoryAxisBuilder<M, V> labelOverlapHiding(boolean v0) {
        categoryAxis.setLabelOverlapHiding(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.chart.client.chart.axis.CategoryAxis#setLabelPadding(int)
     */
    public CategoryAxisBuilder<M, V> labelPadding(int v0) {
        categoryAxis.setLabelPadding(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.chart.client.chart.axis.CategoryAxis#setLabelProvider(com.sencha.gxt.data.shared.LabelProvider)
     */
    public CategoryAxisBuilder<M, V> labelProvider(com.sencha.gxt.data.shared.LabelProvider<? super V> v0) {
        categoryAxis.setLabelProvider(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.chart.client.chart.axis.CategoryAxis#setLabelStepRatio(int)
     */
    public CategoryAxisBuilder<M, V> labelStepRatio(int v0) {
        categoryAxis.setLabelStepRatio(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.chart.client.chart.axis.CategoryAxis#setLabelTolerance(double)
     */
    public CategoryAxisBuilder<M, V> labelTolerance(double v0) {
        categoryAxis.setLabelTolerance(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.chart.client.chart.axis.CategoryAxis#setLength(double)
     */
    public CategoryAxisBuilder<M, V> length(double v0) {
        categoryAxis.setLength(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.chart.client.chart.axis.CategoryAxis#setMinorTickSteps(int)
     */
    public CategoryAxisBuilder<M, V> minorTickSteps(int v0) {
        categoryAxis.setMinorTickSteps(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.chart.client.chart.axis.CategoryAxis#setPosition(com.sencha.gxt.chart.client.chart.Chart.Position)
     */
    public CategoryAxisBuilder<M, V> position(com.sencha.gxt.chart.client.chart.Chart.Position v0) {
        categoryAxis.setPosition(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.chart.client.chart.axis.CategoryAxis#setTitleConfig(com.sencha.gxt.chart.client.draw.sprite.TextSprite)
     */
    public CategoryAxisBuilder<M, V> titleConfig(com.sencha.gxt.chart.client.draw.sprite.TextSprite v0) {
        categoryAxis.setTitleConfig(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.chart.client.chart.axis.CategoryAxis#setToolTipConfig(com.sencha.gxt.chart.client.chart.axis.AxisToolTipConfig)
     */
    public CategoryAxisBuilder<M, V> toolTipConfig(com.sencha.gxt.chart.client.chart.axis.AxisToolTipConfig<M> v0) {
        categoryAxis.setToolTipConfig(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.chart.client.chart.axis.CategoryAxis#setWidth(double)
     */
    public CategoryAxisBuilder<M, V> width(double v0) {
        categoryAxis.setWidth(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.chart.client.chart.axis.CategoryAxis#setX(double)
     */
    public CategoryAxisBuilder<M, V> x(double v0) {
        categoryAxis.setX(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.chart.client.chart.axis.CategoryAxis#setY(double)
     */
    public CategoryAxisBuilder<M, V> y(double v0) {
        categoryAxis.setY(v0);
        return this;
    }
}
