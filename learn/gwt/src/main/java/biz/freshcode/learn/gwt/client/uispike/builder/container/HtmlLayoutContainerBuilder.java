package biz.freshcode.learn.gwt.client.uispike.builder.container;

import com.sencha.gxt.widget.core.client.container.HtmlLayoutContainer;
import biz.freshcode.learn.gwt.client.uispike.builder.BeanBuilder;

// Generated by BeanBuilderGenerator
@BeanBuilder(HtmlLayoutContainer.class)
public class HtmlLayoutContainerBuilder {
    public final HtmlLayoutContainer htmlLayoutContainer;

    public HtmlLayoutContainerBuilder(HtmlLayoutContainer v) {
        htmlLayoutContainer = v;
    }

    public HtmlLayoutContainerBuilder hTML(com.google.gwt.safehtml.shared.SafeHtml v0) {
        htmlLayoutContainer.setHTML(v0);
        return this;
    }

    public HtmlLayoutContainerBuilder hTML(java.lang.String v0) {
        htmlLayoutContainer.setHTML(v0);
        return this;
    }

    public HtmlLayoutContainerBuilder add(com.google.gwt.user.client.ui.IsWidget v0, com.sencha.gxt.widget.core.client.container.AbstractHtmlLayoutContainer.HtmlData v1) {
        htmlLayoutContainer.add(v0, v1);
        return this;
    }

    public HtmlLayoutContainerBuilder add(com.google.gwt.user.client.ui.IsWidget v0) {
        htmlLayoutContainer.add(v0);
        return this;
    }

    public HtmlLayoutContainerBuilder add(com.google.gwt.user.client.ui.Widget v0) {
        htmlLayoutContainer.add(v0);
        return this;
    }

    public HtmlLayoutContainerBuilder size(java.lang.String v0, java.lang.String v1) {
        htmlLayoutContainer.setSize(v0, v1);
        return this;
    }

    public HtmlLayoutContainerBuilder addStyleOnOver(com.google.gwt.dom.client.Element v0, java.lang.String v1) {
        htmlLayoutContainer.addStyleOnOver(v0, v1);
        return this;
    }

    public HtmlLayoutContainerBuilder allowTextSelection(boolean v0) {
        htmlLayoutContainer.setAllowTextSelection(v0);
        return this;
    }

    public HtmlLayoutContainerBuilder borders(boolean v0) {
        htmlLayoutContainer.setBorders(v0);
        return this;
    }

    public HtmlLayoutContainerBuilder bounds(int v0, int v1, int v2, int v3) {
        htmlLayoutContainer.setBounds(v0, v1, v2, v3);
        return this;
    }

    public HtmlLayoutContainerBuilder bounds(com.sencha.gxt.core.client.util.Rectangle v0) {
        htmlLayoutContainer.setBounds(v0);
        return this;
    }

    public HtmlLayoutContainerBuilder contextMenu(com.sencha.gxt.widget.core.client.menu.Menu v0) {
        htmlLayoutContainer.setContextMenu(v0);
        return this;
    }

    public HtmlLayoutContainerBuilder data(java.lang.String v0, java.lang.Object v1) {
        htmlLayoutContainer.setData(v0, v1);
        return this;
    }

    public HtmlLayoutContainerBuilder deferHeight(boolean v0) {
        htmlLayoutContainer.setDeferHeight(v0);
        return this;
    }

    public HtmlLayoutContainerBuilder enabled(boolean v0) {
        htmlLayoutContainer.setEnabled(v0);
        return this;
    }

    public HtmlLayoutContainerBuilder height(int v0) {
        htmlLayoutContainer.setHeight(v0);
        return this;
    }

    public HtmlLayoutContainerBuilder height(java.lang.String v0) {
        htmlLayoutContainer.setHeight(v0);
        return this;
    }

    public HtmlLayoutContainerBuilder hideMode(com.sencha.gxt.core.client.Style.HideMode v0) {
        htmlLayoutContainer.setHideMode(v0);
        return this;
    }

    public HtmlLayoutContainerBuilder id(java.lang.String v0) {
        htmlLayoutContainer.setId(v0);
        return this;
    }

    public HtmlLayoutContainerBuilder itemId(java.lang.String v0) {
        htmlLayoutContainer.setItemId(v0);
        return this;
    }

    public HtmlLayoutContainerBuilder pagePosition(int v0, int v1) {
        htmlLayoutContainer.setPagePosition(v0, v1);
        return this;
    }

    public HtmlLayoutContainerBuilder pixelSize(int v0, int v1) {
        htmlLayoutContainer.setPixelSize(v0, v1);
        return this;
    }

    public HtmlLayoutContainerBuilder position(int v0, int v1) {
        htmlLayoutContainer.setPosition(v0, v1);
        return this;
    }

    public HtmlLayoutContainerBuilder shadow(boolean v0) {
        htmlLayoutContainer.setShadow(v0);
        return this;
    }

    public HtmlLayoutContainerBuilder stateful(boolean v0) {
        htmlLayoutContainer.setStateful(v0);
        return this;
    }

    public HtmlLayoutContainerBuilder stateId(java.lang.String v0) {
        htmlLayoutContainer.setStateId(v0);
        return this;
    }

    public HtmlLayoutContainerBuilder tabIndex(int v0) {
        htmlLayoutContainer.setTabIndex(v0);
        return this;
    }

    public HtmlLayoutContainerBuilder toolTip(java.lang.String v0) {
        htmlLayoutContainer.setToolTip(v0);
        return this;
    }

    public HtmlLayoutContainerBuilder toolTipConfig(com.sencha.gxt.widget.core.client.tips.ToolTipConfig v0) {
        htmlLayoutContainer.setToolTipConfig(v0);
        return this;
    }

    public HtmlLayoutContainerBuilder visible(boolean v0) {
        htmlLayoutContainer.setVisible(v0);
        return this;
    }

    public HtmlLayoutContainerBuilder width(int v0) {
        htmlLayoutContainer.setWidth(v0);
        return this;
    }

    public HtmlLayoutContainerBuilder width(java.lang.String v0) {
        htmlLayoutContainer.setWidth(v0);
        return this;
    }

    public HtmlLayoutContainerBuilder layoutData(java.lang.Object v0) {
        htmlLayoutContainer.setLayoutData(v0);
        return this;
    }

    public HtmlLayoutContainerBuilder addStyleDependentName(java.lang.String v0) {
        htmlLayoutContainer.addStyleDependentName(v0);
        return this;
    }

    public HtmlLayoutContainerBuilder styleDependentName(java.lang.String v0, boolean v1) {
        htmlLayoutContainer.setStyleDependentName(v0, v1);
        return this;
    }

    public HtmlLayoutContainerBuilder addStyleName(java.lang.String v0) {
        htmlLayoutContainer.addStyleName(v0);
        return this;
    }

    public HtmlLayoutContainerBuilder styleName(java.lang.String v0, boolean v1) {
        htmlLayoutContainer.setStyleName(v0, v1);
        return this;
    }

    public HtmlLayoutContainerBuilder styleName(java.lang.String v0) {
        htmlLayoutContainer.setStyleName(v0);
        return this;
    }

    public HtmlLayoutContainerBuilder stylePrimaryName(java.lang.String v0) {
        htmlLayoutContainer.setStylePrimaryName(v0);
        return this;
    }

    public HtmlLayoutContainerBuilder title(java.lang.String v0) {
        htmlLayoutContainer.setTitle(v0);
        return this;
    }
}
