package biz.freshcode.learn.gwt.common.client.builder.gxt.form;

import com.sencha.gxt.widget.core.client.form.TextField;

/**
 * Generated by BeanBuilderGenerator
 *
 * @see com.sencha.gxt.widget.core.client.form.TextField
 */
@SuppressWarnings("UnusedDeclaration")
@biz.freshcode.learn.gwt.common.client.builder.BeanBuilder(TextField.class)
public class TextFieldBuilder extends biz.freshcode.learn.gwt.common.client.builder.Construct.Parent<TextFieldBuilder> {
    public final TextField textField;

    public TextFieldBuilder(TextField v) {
        textField = v;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.TextField#TextField()
     */
    public TextFieldBuilder() {
        this(new TextField());
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.TextField#TextField(com.sencha.gxt.cell.core.client.form.TextInputCell)
     */
    public TextFieldBuilder(com.sencha.gxt.cell.core.client.form.TextInputCell v0) {
        this(new TextField(v0));
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.TextField#TextField(com.sencha.gxt.cell.core.client.form.TextInputCell, com.sencha.gxt.widget.core.client.form.PropertyEditor)
     */
    public TextFieldBuilder(com.sencha.gxt.cell.core.client.form.TextInputCell v0, com.sencha.gxt.widget.core.client.form.PropertyEditor<java.lang.String> v1) {
        this(new TextField(v0, v1));
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.TextField#addStyleDependentName(java.lang.String)
     */
    public TextFieldBuilder addStyleDependentName(java.lang.String v0) {
        textField.addStyleDependentName(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.TextField#addStyleName(java.lang.String)
     */
    public TextFieldBuilder addStyleName(java.lang.String v0) {
        textField.addStyleName(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.TextField#addStyleOnOver(com.google.gwt.dom.client.Element, java.lang.String)
     */
    public TextFieldBuilder addStyleOnOver(com.google.gwt.dom.client.Element v0, java.lang.String v1) {
        textField.addStyleOnOver(v0, v1);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.TextField#addValidator(com.sencha.gxt.widget.core.client.form.Validator)
     */
    public TextFieldBuilder addValidator(com.sencha.gxt.widget.core.client.form.Validator<String> v0) {
        textField.addValidator(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.TextField#setAllowBlank(boolean)
     */
    public TextFieldBuilder allowBlank(boolean v0) {
        textField.setAllowBlank(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.TextField#setAllowTextSelection(boolean)
     */
    public TextFieldBuilder allowTextSelection(boolean v0) {
        textField.setAllowTextSelection(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.TextField#setAutoValidate(boolean)
     */
    public TextFieldBuilder autoValidate(boolean v0) {
        textField.setAutoValidate(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.TextField#setBorders(boolean)
     */
    public TextFieldBuilder borders(boolean v0) {
        textField.setBorders(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.TextField#setBounds(com.sencha.gxt.core.client.util.Rectangle)
     */
    public TextFieldBuilder bounds(com.sencha.gxt.core.client.util.Rectangle v0) {
        textField.setBounds(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.TextField#setBounds(int, int, int, int)
     */
    public TextFieldBuilder bounds(int v0, int v1, int v2, int v3) {
        textField.setBounds(v0, v1, v2, v3);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.TextField#setClearValueOnParseError(boolean)
     */
    public TextFieldBuilder clearValueOnParseError(boolean v0) {
        textField.setClearValueOnParseError(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.TextField#setContextMenu(com.sencha.gxt.widget.core.client.menu.Menu)
     */
    public TextFieldBuilder contextMenu(com.sencha.gxt.widget.core.client.menu.Menu v0) {
        textField.setContextMenu(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.TextField#setCursorPos(int)
     */
    public TextFieldBuilder cursorPos(int v0) {
        textField.setCursorPos(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.TextField#setData(java.lang.String, java.lang.Object)
     */
    public TextFieldBuilder data(java.lang.String v0, java.lang.Object v1) {
        textField.setData(v0, v1);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.TextField#setDeferHeight(boolean)
     */
    public TextFieldBuilder deferHeight(boolean v0) {
        textField.setDeferHeight(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.TextField#setDelegate(com.google.gwt.editor.client.EditorDelegate)
     */
    public TextFieldBuilder delegate(com.google.gwt.editor.client.EditorDelegate<String> v0) {
        textField.setDelegate(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.TextField#setDirection(com.google.gwt.i18n.client.HasDirection.Direction)
     */
    public TextFieldBuilder direction(com.google.gwt.i18n.client.HasDirection.Direction v0) {
        textField.setDirection(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.TextField#setDirectionEstimator(boolean)
     */
    public TextFieldBuilder directionEstimator(boolean v0) {
        textField.setDirectionEstimator(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.TextField#setDirectionEstimator(com.google.gwt.i18n.shared.DirectionEstimator)
     */
    public TextFieldBuilder directionEstimator(com.google.gwt.i18n.shared.DirectionEstimator v0) {
        textField.setDirectionEstimator(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.TextField#setEmptyText(java.lang.String)
     */
    public TextFieldBuilder emptyText(java.lang.String v0) {
        textField.setEmptyText(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.TextField#setEnabled(boolean)
     */
    public TextFieldBuilder enabled(boolean v0) {
        textField.setEnabled(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.TextField#setErrorSupport(com.sencha.gxt.widget.core.client.form.error.ErrorHandler)
     */
    public TextFieldBuilder errorSupport(com.sencha.gxt.widget.core.client.form.error.ErrorHandler v0) {
        textField.setErrorSupport(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.TextField#setHeight(java.lang.String)
     */
    public TextFieldBuilder height(java.lang.String v0) {
        textField.setHeight(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.TextField#setHeight(int)
     */
    public TextFieldBuilder height(int v0) {
        textField.setHeight(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.TextField#setHideMode(com.sencha.gxt.core.client.Style.HideMode)
     */
    public TextFieldBuilder hideMode(com.sencha.gxt.core.client.Style.HideMode v0) {
        textField.setHideMode(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.TextField#setId(java.lang.String)
     */
    public TextFieldBuilder id(java.lang.String v0) {
        textField.setId(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.TextField#setItemId(java.lang.String)
     */
    public TextFieldBuilder itemId(java.lang.String v0) {
        textField.setItemId(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.TextField#setLayoutData(java.lang.Object)
     */
    public TextFieldBuilder layoutData(java.lang.Object v0) {
        textField.setLayoutData(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.TextField#setName(java.lang.String)
     */
    public TextFieldBuilder name(java.lang.String v0) {
        textField.setName(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.TextField#setOriginalValue(Object)
     */
    public TextFieldBuilder originalValue(String v0) {
        textField.setOriginalValue(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.TextField#setPagePosition(int, int)
     */
    public TextFieldBuilder pagePosition(int v0, int v1) {
        textField.setPagePosition(v0, v1);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.TextField#setPixelSize(int, int)
     */
    public TextFieldBuilder pixelSize(int v0, int v1) {
        textField.setPixelSize(v0, v1);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.TextField#setPosition(int, int)
     */
    public TextFieldBuilder position(int v0, int v1) {
        textField.setPosition(v0, v1);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.TextField#setPropertyEditor(com.sencha.gxt.widget.core.client.form.PropertyEditor)
     */
    public TextFieldBuilder propertyEditor(com.sencha.gxt.widget.core.client.form.PropertyEditor<String> v0) {
        textField.setPropertyEditor(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.TextField#setReadOnly(boolean)
     */
    public TextFieldBuilder readOnly(boolean v0) {
        textField.setReadOnly(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.TextField#setSelectOnFocus(boolean)
     */
    public TextFieldBuilder selectOnFocus(boolean v0) {
        textField.setSelectOnFocus(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.TextField#setSelectionRange(int, int)
     */
    public TextFieldBuilder selectionRange(int v0, int v1) {
        textField.setSelectionRange(v0, v1);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.TextField#setShadow(boolean)
     */
    public TextFieldBuilder shadow(boolean v0) {
        textField.setShadow(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.TextField#setShadowPosition(com.sencha.gxt.core.client.dom.Layer.ShadowPosition)
     */
    public TextFieldBuilder shadowPosition(com.sencha.gxt.core.client.dom.Layer.ShadowPosition v0) {
        textField.setShadowPosition(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.TextField#setSize(java.lang.String, java.lang.String)
     */
    public TextFieldBuilder size(java.lang.String v0, java.lang.String v1) {
        textField.setSize(v0, v1);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.TextField#setStateId(java.lang.String)
     */
    public TextFieldBuilder stateId(java.lang.String v0) {
        textField.setStateId(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.TextField#setStateful(boolean)
     */
    public TextFieldBuilder stateful(boolean v0) {
        textField.setStateful(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.TextField#setStyleDependentName(java.lang.String, boolean)
     */
    public TextFieldBuilder styleDependentName(java.lang.String v0, boolean v1) {
        textField.setStyleDependentName(v0, v1);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.TextField#setStyleName(java.lang.String)
     */
    public TextFieldBuilder styleName(java.lang.String v0) {
        textField.setStyleName(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.TextField#setStyleName(java.lang.String, boolean)
     */
    public TextFieldBuilder styleName(java.lang.String v0, boolean v1) {
        textField.setStyleName(v0, v1);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.TextField#setStylePrimaryName(java.lang.String)
     */
    public TextFieldBuilder stylePrimaryName(java.lang.String v0) {
        textField.setStylePrimaryName(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.TextField#setTabIndex(int)
     */
    public TextFieldBuilder tabIndex(int v0) {
        textField.setTabIndex(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.TextField#setText(java.lang.String)
     */
    public TextFieldBuilder text(java.lang.String v0) {
        textField.setText(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.TextField#setTitle(java.lang.String)
     */
    public TextFieldBuilder title(java.lang.String v0) {
        textField.setTitle(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.TextField#setToolTip(java.lang.String)
     */
    public TextFieldBuilder toolTip(java.lang.String v0) {
        textField.setToolTip(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.TextField#setToolTipConfig(com.sencha.gxt.widget.core.client.tips.ToolTipConfig)
     */
    public TextFieldBuilder toolTipConfig(com.sencha.gxt.widget.core.client.tips.ToolTipConfig v0) {
        textField.setToolTipConfig(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.TextField#setValidateOnBlur(boolean)
     */
    public TextFieldBuilder validateOnBlur(boolean v0) {
        textField.setValidateOnBlur(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.TextField#setValidationDelay(int)
     */
    public TextFieldBuilder validationDelay(int v0) {
        textField.setValidationDelay(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.TextField#setValue(Object)
     */
    public TextFieldBuilder value(String v0) {
        textField.setValue(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.TextField#setValue(Object, boolean)
     */
    public TextFieldBuilder value(String v0, boolean v1) {
        textField.setValue(v0, v1);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.TextField#setValue(Object, boolean, boolean)
     */
    public TextFieldBuilder value(String v0, boolean v1, boolean v2) {
        textField.setValue(v0, v1, v2);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.TextField#setVisible(boolean)
     */
    public TextFieldBuilder visible(boolean v0) {
        textField.setVisible(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.TextField#setWidth(java.lang.String)
     */
    public TextFieldBuilder width(java.lang.String v0) {
        textField.setWidth(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.form.TextField#setWidth(int)
     */
    public TextFieldBuilder width(int v0) {
        textField.setWidth(v0);
        return this;
    }
}
