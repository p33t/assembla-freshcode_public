package biz.freshcode.learn.gwt.client.uispike.builder;

import com.sencha.gxt.widget.core.client.ContentPanel;
import biz.freshcode.learn.gwt.client.uispike.builder.BeanBuilder;

// Generated by BeanBuilderGenerator
@BeanBuilder(ContentPanel.class)
public class ContentPanelBuilder {
    public final ContentPanel contentPanel;

    public ContentPanelBuilder() {
        this(new ContentPanel());
    }

    public ContentPanelBuilder(ContentPanel v) {
        contentPanel = v;
    }

    public ContentPanelBuilder animationDuration(int v) {
        contentPanel.setAnimationDuration(v);
        return this;
    }

    public ContentPanelBuilder animCollapse(boolean v) {
        contentPanel.setAnimCollapse(v);
        return this;
    }

    public ContentPanelBuilder bodyBorder(boolean v) {
        contentPanel.setBodyBorder(v);
        return this;
    }

    public ContentPanelBuilder bodyStyle(java.lang.String v) {
        contentPanel.setBodyStyle(v);
        return this;
    }

    public ContentPanelBuilder bodyStyleName(java.lang.String v) {
        contentPanel.setBodyStyleName(v);
        return this;
    }

    public ContentPanelBuilder buttonAlign(com.sencha.gxt.widget.core.client.container.BoxLayoutContainer.BoxLayoutPack v) {
        contentPanel.setButtonAlign(v);
        return this;
    }

    public ContentPanelBuilder collapsible(boolean v) {
        contentPanel.setCollapsible(v);
        return this;
    }

    public ContentPanelBuilder expanded(boolean v) {
        contentPanel.setExpanded(v);
        return this;
    }

    public ContentPanelBuilder headerVisible(boolean v) {
        contentPanel.setHeaderVisible(v);
        return this;
    }

    public ContentPanelBuilder headingHtml(com.google.gwt.safehtml.shared.SafeHtml v) {
        contentPanel.setHeadingHtml(v);
        return this;
    }

    public ContentPanelBuilder headingHtml(java.lang.String v) {
        contentPanel.setHeadingHtml(v);
        return this;
    }

    public ContentPanelBuilder headingText(java.lang.String v) {
        contentPanel.setHeadingText(v);
        return this;
    }

    public ContentPanelBuilder hideCollapseTool(boolean v) {
        contentPanel.setHideCollapseTool(v);
        return this;
    }

    public ContentPanelBuilder messages(com.sencha.gxt.widget.core.client.ContentPanel.ContentPanelMessages v) {
        contentPanel.setMessages(v);
        return this;
    }

    public ContentPanelBuilder minButtonWidth(int v) {
        contentPanel.setMinButtonWidth(v);
        return this;
    }

    public ContentPanelBuilder titleCollapse(boolean v) {
        contentPanel.setTitleCollapse(v);
        return this;
    }

    public ContentPanelBuilder resize(boolean v) {
        contentPanel.setResize(v);
        return this;
    }

    public ContentPanelBuilder widget(com.google.gwt.user.client.ui.IsWidget v) {
        contentPanel.setWidget(v);
        return this;
    }

    public ContentPanelBuilder widget(com.google.gwt.user.client.ui.Widget v) {
        contentPanel.setWidget(v);
        return this;
    }

    public ContentPanelBuilder deferHeight(boolean v) {
        contentPanel.setDeferHeight(v);
        return this;
    }

    public ContentPanelBuilder visible(boolean v) {
        contentPanel.setVisible(v);
        return this;
    }

    public ContentPanelBuilder width(int v) {
        contentPanel.setWidth(v);
        return this;
    }

    public ContentPanelBuilder width(java.lang.String v) {
        contentPanel.setWidth(v);
        return this;
    }

    public ContentPanelBuilder height(int v) {
        contentPanel.setHeight(v);
        return this;
    }

    public ContentPanelBuilder height(java.lang.String v) {
        contentPanel.setHeight(v);
        return this;
    }

    public ContentPanelBuilder allowTextSelection(boolean v) {
        contentPanel.setAllowTextSelection(v);
        return this;
    }

    public ContentPanelBuilder borders(boolean v) {
        contentPanel.setBorders(v);
        return this;
    }

    public ContentPanelBuilder bounds(com.sencha.gxt.core.client.util.Rectangle v) {
        contentPanel.setBounds(v);
        return this;
    }

    public ContentPanelBuilder contextMenu(com.sencha.gxt.widget.core.client.menu.Menu v) {
        contentPanel.setContextMenu(v);
        return this;
    }

    public ContentPanelBuilder enabled(boolean v) {
        contentPanel.setEnabled(v);
        return this;
    }

    public ContentPanelBuilder hideMode(com.sencha.gxt.core.client.Style.HideMode v) {
        contentPanel.setHideMode(v);
        return this;
    }

    public ContentPanelBuilder id(java.lang.String v) {
        contentPanel.setId(v);
        return this;
    }

    public ContentPanelBuilder itemId(java.lang.String v) {
        contentPanel.setItemId(v);
        return this;
    }

    public ContentPanelBuilder shadow(boolean v) {
        contentPanel.setShadow(v);
        return this;
    }

    public ContentPanelBuilder stateful(boolean v) {
        contentPanel.setStateful(v);
        return this;
    }

    public ContentPanelBuilder stateId(java.lang.String v) {
        contentPanel.setStateId(v);
        return this;
    }

    public ContentPanelBuilder tabIndex(int v) {
        contentPanel.setTabIndex(v);
        return this;
    }

    public ContentPanelBuilder toolTip(java.lang.String v) {
        contentPanel.setToolTip(v);
        return this;
    }

    public ContentPanelBuilder toolTipConfig(com.sencha.gxt.widget.core.client.tips.ToolTipConfig v) {
        contentPanel.setToolTipConfig(v);
        return this;
    }

    public ContentPanelBuilder layoutData(java.lang.Object v) {
        contentPanel.setLayoutData(v);
        return this;
    }

    public ContentPanelBuilder styleName(java.lang.String v) {
        contentPanel.setStyleName(v);
        return this;
    }

    public ContentPanelBuilder stylePrimaryName(java.lang.String v) {
        contentPanel.setStylePrimaryName(v);
        return this;
    }

    public ContentPanelBuilder title(java.lang.String v) {
        contentPanel.setTitle(v);
        return this;
    }

    public ContentPanelBuilder initFrom(ContentPanel v) {
        return this
                .animationDuration(v.getAnimationDuration())
                .buttonAlign(v.getButtonAlign())
                .messages(v.getMessages())
                .minButtonWidth(v.getMinButtonWidth())
                .widget(v.getWidget())
                .widget(v.getWidget())
                .hideMode(v.getHideMode())
                .id(v.getId())
                .itemId(v.getItemId())
                .shadow(v.getShadow())
                .stateId(v.getStateId())
                .layoutData(v.getLayoutData())
                .styleName(v.getStyleName())
                .stylePrimaryName(v.getStylePrimaryName())
                .title(v.getTitle());
    }
}
