package biz.freshcode.learn.gwt2.common.client.builder.gxt.grid;

import com.sencha.gxt.widget.core.client.grid.GroupingView;

/**
 * Generated by BeanBuilderGenerator
 *
 * @see com.sencha.gxt.widget.core.client.grid.GroupingView
 */
@SuppressWarnings("UnusedDeclaration")
@biz.freshcode.learn.gwt2.common.client.builder.BeanBuilder(GroupingView.class)
public class GroupingViewBuilder<M> extends biz.freshcode.learn.gwt2.common.client.builder.Construct.Parent<GroupingViewBuilder<M>> {
    public final GroupingView<M> groupingView;

    public GroupingViewBuilder(GroupingView<M> v) {
        groupingView = v;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.grid.GroupingView#GroupingView(com.sencha.gxt.widget.core.client.grid.GroupingView.GroupingViewAppearance)
     */
    public GroupingViewBuilder(com.sencha.gxt.widget.core.client.grid.GroupingView.GroupingViewAppearance v0) {
        this(new GroupingView<M>(v0));
    }

    /**
     * @see com.sencha.gxt.widget.core.client.grid.GroupingView#GroupingView(com.sencha.gxt.widget.core.client.grid.GridView.GridAppearance, com.sencha.gxt.widget.core.client.grid.GroupingView.GroupingViewAppearance)
     */
    public GroupingViewBuilder(com.sencha.gxt.widget.core.client.grid.GridView.GridAppearance v0, com.sencha.gxt.widget.core.client.grid.GroupingView.GroupingViewAppearance v1) {
        this(new GroupingView<M>(v0, v1));
    }

    /**
     * @see com.sencha.gxt.widget.core.client.grid.GroupingView#GroupingView()
     */
    public GroupingViewBuilder() {
        this(new GroupingView<M>());
    }

    /**
     * @see com.sencha.gxt.widget.core.client.grid.GroupingView#setAdjustForHScroll(boolean)
     */
    public GroupingViewBuilder<M> adjustForHScroll(boolean v0) {
        groupingView.setAdjustForHScroll(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.grid.GroupingView#setAutoExpandColumn(com.sencha.gxt.widget.core.client.grid.ColumnConfig)
     */
    public GroupingViewBuilder<M> autoExpandColumn(com.sencha.gxt.widget.core.client.grid.ColumnConfig<M, ?> v0) {
        groupingView.setAutoExpandColumn(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.grid.GroupingView#setAutoExpandMax(int)
     */
    public GroupingViewBuilder<M> autoExpandMax(int v0) {
        groupingView.setAutoExpandMax(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.grid.GroupingView#setAutoExpandMin(int)
     */
    public GroupingViewBuilder<M> autoExpandMin(int v0) {
        groupingView.setAutoExpandMin(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.grid.GroupingView#setAutoFill(boolean)
     */
    public GroupingViewBuilder<M> autoFill(boolean v0) {
        groupingView.setAutoFill(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.grid.GroupingView#setColumnHeader(com.sencha.gxt.widget.core.client.grid.ColumnHeader)
     */
    public GroupingViewBuilder<M> columnHeader(com.sencha.gxt.widget.core.client.grid.ColumnHeader<M> v0) {
        groupingView.setColumnHeader(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.grid.GroupingView#setColumnLines(boolean)
     */
    public GroupingViewBuilder<M> columnLines(boolean v0) {
        groupingView.setColumnLines(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.grid.GroupingView#setDeferUpdates(boolean)
     */
    public GroupingViewBuilder<M> deferUpdates(boolean v0) {
        groupingView.setDeferUpdates(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.grid.GroupingView#setEmptyText(java.lang.String)
     */
    public GroupingViewBuilder<M> emptyText(java.lang.String v0) {
        groupingView.setEmptyText(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.grid.GroupingView#setEnableGroupingMenu(boolean)
     */
    public GroupingViewBuilder<M> enableGroupingMenu(boolean v0) {
        groupingView.setEnableGroupingMenu(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.grid.GroupingView#setEnableNoGroups(boolean)
     */
    public GroupingViewBuilder<M> enableNoGroups(boolean v0) {
        groupingView.setEnableNoGroups(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.grid.GroupingView#setEnableRowBody(boolean)
     */
    public GroupingViewBuilder<M> enableRowBody(boolean v0) {
        groupingView.setEnableRowBody(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.grid.GroupingView#setForceFit(boolean)
     */
    public GroupingViewBuilder<M> forceFit(boolean v0) {
        groupingView.setForceFit(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.grid.GroupingView#setRowBodyRowSpan(int)
     */
    public GroupingViewBuilder<M> rowBodyRowSpan(int v0) {
        groupingView.setRowBodyRowSpan(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.grid.GroupingView#setShowDirtyCells(boolean)
     */
    public GroupingViewBuilder<M> showDirtyCells(boolean v0) {
        groupingView.setShowDirtyCells(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.grid.GroupingView#setShowGroupedColumn(boolean)
     */
    public GroupingViewBuilder<M> showGroupedColumn(boolean v0) {
        groupingView.setShowGroupedColumn(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.grid.GroupingView#setSortingEnabled(boolean)
     */
    public GroupingViewBuilder<M> sortingEnabled(boolean v0) {
        groupingView.setSortingEnabled(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.grid.GroupingView#setStartCollapsed(boolean)
     */
    public GroupingViewBuilder<M> startCollapsed(boolean v0) {
        groupingView.setStartCollapsed(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.grid.GroupingView#setStripeRows(boolean)
     */
    public GroupingViewBuilder<M> stripeRows(boolean v0) {
        groupingView.setStripeRows(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.grid.GroupingView#setTrackMouseOver(boolean)
     */
    public GroupingViewBuilder<M> trackMouseOver(boolean v0) {
        groupingView.setTrackMouseOver(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.grid.GroupingView#setViewConfig(com.sencha.gxt.widget.core.client.grid.GridViewConfig)
     */
    public GroupingViewBuilder<M> viewConfig(com.sencha.gxt.widget.core.client.grid.GridViewConfig<M> v0) {
        groupingView.setViewConfig(v0);
        return this;
    }
}
