package biz.freshcode.learn.gwt2.common.client.builder.gxt.menu;

import com.sencha.gxt.widget.core.client.menu.Menu;

/**
 * Generated by BeanBuilderGenerator
 *
 * @see com.sencha.gxt.widget.core.client.menu.Menu
 */
@SuppressWarnings("UnusedDeclaration")
@biz.freshcode.learn.gwt2.common.client.builder.BeanBuilder(Menu.class)
public class MenuBuilder extends biz.freshcode.learn.gwt2.common.client.builder.Construct.Parent<MenuBuilder> {
    public final Menu menu;

    public MenuBuilder(Menu v) {
        menu = v;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.menu.Menu#Menu()
     */
    public MenuBuilder() {
        this(new Menu());
    }

    /**
     * @see com.sencha.gxt.widget.core.client.menu.Menu#Menu(com.sencha.gxt.widget.core.client.menu.Menu.MenuAppearance)
     */
    public MenuBuilder(com.sencha.gxt.widget.core.client.menu.Menu.MenuAppearance v0) {
        this(new Menu(v0));
    }

    /**
     * @see com.sencha.gxt.widget.core.client.menu.Menu#add(com.google.gwt.user.client.ui.Widget)
     */
    public MenuBuilder add(com.google.gwt.user.client.ui.Widget v0) {
        menu.add(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.menu.Menu#add(com.google.gwt.user.client.ui.IsWidget)
     */
    public MenuBuilder add(com.google.gwt.user.client.ui.IsWidget v0) {
        menu.add(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.menu.Menu#addGestureRecognizer(com.sencha.gxt.core.client.gestures.GestureRecognizer)
     */
    public MenuBuilder addGestureRecognizer(com.sencha.gxt.core.client.gestures.GestureRecognizer v0) {
        menu.addGestureRecognizer(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.menu.Menu#addStyleDependentName(java.lang.String)
     */
    public MenuBuilder addStyleDependentName(java.lang.String v0) {
        menu.addStyleDependentName(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.menu.Menu#addStyleName(java.lang.String)
     */
    public MenuBuilder addStyleName(java.lang.String v0) {
        menu.addStyleName(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.menu.Menu#addStyleOnOver(com.google.gwt.dom.client.Element, java.lang.String)
     */
    public MenuBuilder addStyleOnOver(com.google.gwt.dom.client.Element v0, java.lang.String v1) {
        menu.addStyleOnOver(v0, v1);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.menu.Menu#setActiveItem(com.google.gwt.user.client.ui.Widget, boolean)
     */
    public MenuBuilder activeItem(com.google.gwt.user.client.ui.Widget v0, boolean v1) {
        menu.setActiveItem(v0, v1);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.menu.Menu#setAdjustSize(boolean)
     */
    public MenuBuilder adjustSize(boolean v0) {
        menu.setAdjustSize(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.menu.Menu#setAllowTextSelection(boolean)
     */
    public MenuBuilder allowTextSelection(boolean v0) {
        menu.setAllowTextSelection(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.menu.Menu#setBorders(boolean)
     */
    public MenuBuilder borders(boolean v0) {
        menu.setBorders(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.menu.Menu#setBounds(com.sencha.gxt.core.client.util.Rectangle)
     */
    public MenuBuilder bounds(com.sencha.gxt.core.client.util.Rectangle v0) {
        menu.setBounds(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.menu.Menu#setBounds(int, int, int, int)
     */
    public MenuBuilder bounds(int v0, int v1, int v2, int v3) {
        menu.setBounds(v0, v1, v2, v3);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.menu.Menu#setConstrainViewport(boolean)
     */
    public MenuBuilder constrainViewport(boolean v0) {
        menu.setConstrainViewport(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.menu.Menu#setContextMenu(com.sencha.gxt.widget.core.client.menu.Menu)
     */
    public MenuBuilder contextMenu(com.sencha.gxt.widget.core.client.menu.Menu v0) {
        menu.setContextMenu(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.menu.Menu#setData(java.lang.String, java.lang.Object)
     */
    public MenuBuilder data(java.lang.String v0, java.lang.Object v1) {
        menu.setData(v0, v1);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.menu.Menu#setDefaultAlign(java.lang.String)
     */
    public MenuBuilder defaultAlign(java.lang.String v0) {
        menu.setDefaultAlign(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.menu.Menu#setDeferHeight(boolean)
     */
    public MenuBuilder deferHeight(boolean v0) {
        menu.setDeferHeight(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.menu.Menu#setEnableScrolling(boolean)
     */
    public MenuBuilder enableScrolling(boolean v0) {
        menu.setEnableScrolling(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.menu.Menu#setEnabled(boolean)
     */
    public MenuBuilder enabled(boolean v0) {
        menu.setEnabled(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.menu.Menu#setFocusOnShow(boolean)
     */
    public MenuBuilder focusOnShow(boolean v0) {
        menu.setFocusOnShow(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.menu.Menu#setHeight(java.lang.String)
     */
    public MenuBuilder height(java.lang.String v0) {
        menu.setHeight(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.menu.Menu#setHeight(int)
     */
    public MenuBuilder height(int v0) {
        menu.setHeight(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.menu.Menu#setHideMode(com.sencha.gxt.core.client.Style.HideMode)
     */
    public MenuBuilder hideMode(com.sencha.gxt.core.client.Style.HideMode v0) {
        menu.setHideMode(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.menu.Menu#setId(java.lang.String)
     */
    public MenuBuilder id(java.lang.String v0) {
        menu.setId(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.menu.Menu#setItemId(java.lang.String)
     */
    public MenuBuilder itemId(java.lang.String v0) {
        menu.setItemId(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.menu.Menu#setLayoutData(java.lang.Object)
     */
    public MenuBuilder layoutData(java.lang.Object v0) {
        menu.setLayoutData(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.menu.Menu#setMaxHeight(int)
     */
    public MenuBuilder maxHeight(int v0) {
        menu.setMaxHeight(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.menu.Menu#setMaxWidth(java.lang.Integer)
     */
    public MenuBuilder maxWidth(java.lang.Integer v0) {
        menu.setMaxWidth(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.menu.Menu#setMinWidth(java.lang.Integer)
     */
    public MenuBuilder minWidth(java.lang.Integer v0) {
        menu.setMinWidth(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.menu.Menu#setOnHideFocusElement(com.google.gwt.dom.client.Element)
     */
    public MenuBuilder onHideFocusElement(com.google.gwt.dom.client.Element v0) {
        menu.setOnHideFocusElement(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.menu.Menu#setPagePosition(int, int)
     */
    public MenuBuilder pagePosition(int v0, int v1) {
        menu.setPagePosition(v0, v1);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.menu.Menu#setPixelSize(int, int)
     */
    public MenuBuilder pixelSize(int v0, int v1) {
        menu.setPixelSize(v0, v1);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.menu.Menu#setPosition(int, int)
     */
    public MenuBuilder position(int v0, int v1) {
        menu.setPosition(v0, v1);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.menu.Menu#setShadow(boolean)
     */
    public MenuBuilder shadow(boolean v0) {
        menu.setShadow(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.menu.Menu#setShadowPosition(com.sencha.gxt.core.client.dom.Layer.ShadowPosition)
     */
    public MenuBuilder shadowPosition(com.sencha.gxt.core.client.dom.Layer.ShadowPosition v0) {
        menu.setShadowPosition(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.menu.Menu#setSize(java.lang.String, java.lang.String)
     */
    public MenuBuilder size(java.lang.String v0, java.lang.String v1) {
        menu.setSize(v0, v1);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.menu.Menu#setStateId(java.lang.String)
     */
    public MenuBuilder stateId(java.lang.String v0) {
        menu.setStateId(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.menu.Menu#setStateful(boolean)
     */
    public MenuBuilder stateful(boolean v0) {
        menu.setStateful(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.menu.Menu#setStyleDependentName(java.lang.String, boolean)
     */
    public MenuBuilder styleDependentName(java.lang.String v0, boolean v1) {
        menu.setStyleDependentName(v0, v1);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.menu.Menu#setStyleName(java.lang.String)
     */
    public MenuBuilder styleName(java.lang.String v0) {
        menu.setStyleName(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.menu.Menu#setStyleName(java.lang.String, boolean)
     */
    public MenuBuilder styleName(java.lang.String v0, boolean v1) {
        menu.setStyleName(v0, v1);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.menu.Menu#setStylePrimaryName(java.lang.String)
     */
    public MenuBuilder stylePrimaryName(java.lang.String v0) {
        menu.setStylePrimaryName(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.menu.Menu#setSubMenuAlign(java.lang.String)
     */
    public MenuBuilder subMenuAlign(java.lang.String v0) {
        menu.setSubMenuAlign(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.menu.Menu#setTabIndex(int)
     */
    public MenuBuilder tabIndex(int v0) {
        menu.setTabIndex(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.menu.Menu#setTitle(java.lang.String)
     */
    public MenuBuilder title(java.lang.String v0) {
        menu.setTitle(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.menu.Menu#setToolTip(java.lang.String)
     */
    public MenuBuilder toolTip(java.lang.String v0) {
        menu.setToolTip(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.menu.Menu#setToolTip(com.google.gwt.safehtml.shared.SafeHtml)
     */
    public MenuBuilder toolTip(com.google.gwt.safehtml.shared.SafeHtml v0) {
        menu.setToolTip(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.menu.Menu#setToolTipConfig(com.sencha.gxt.widget.core.client.tips.ToolTipConfig)
     */
    public MenuBuilder toolTipConfig(com.sencha.gxt.widget.core.client.tips.ToolTipConfig v0) {
        menu.setToolTipConfig(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.menu.Menu#setVisible(boolean)
     */
    public MenuBuilder visible(boolean v0) {
        menu.setVisible(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.menu.Menu#setWidth(java.lang.String)
     */
    public MenuBuilder width(java.lang.String v0) {
        menu.setWidth(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.widget.core.client.menu.Menu#setWidth(int)
     */
    public MenuBuilder width(int v0) {
        menu.setWidth(v0);
        return this;
    }
}
