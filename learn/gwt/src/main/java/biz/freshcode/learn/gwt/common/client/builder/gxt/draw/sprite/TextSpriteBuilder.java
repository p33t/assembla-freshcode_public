package biz.freshcode.learn.gwt.common.client.builder.gxt.draw.sprite;

import com.sencha.gxt.chart.client.draw.sprite.TextSprite;

/**
 * Generated by BeanBuilderGenerator
 *
 * @see com.sencha.gxt.chart.client.draw.sprite.TextSprite
 */
@SuppressWarnings("UnusedDeclaration")
@biz.freshcode.learn.gwt.common.client.builder.BeanBuilder(TextSprite.class)
public class TextSpriteBuilder extends biz.freshcode.learn.gwt.common.client.builder.Construct.Parent<TextSpriteBuilder> {
    public final TextSprite textSprite;

    public TextSpriteBuilder(TextSprite v) {
        textSprite = v;
    }

    /**
     * @see com.sencha.gxt.chart.client.draw.sprite.TextSprite#TextSprite(java.lang.String)
     */
    public TextSpriteBuilder(java.lang.String v0) {
        this(new TextSprite(v0));
    }

    /**
     * @see com.sencha.gxt.chart.client.draw.sprite.TextSprite#TextSprite()
     */
    public TextSpriteBuilder() {
        this(new TextSprite());
    }

    /**
     * @see com.sencha.gxt.chart.client.draw.sprite.TextSprite#setClipRectangle(com.sencha.gxt.core.client.util.PreciseRectangle)
     */
    public TextSpriteBuilder clipRectangle(com.sencha.gxt.core.client.util.PreciseRectangle v0) {
        textSprite.setClipRectangle(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.chart.client.draw.sprite.TextSprite#setComponent(com.sencha.gxt.chart.client.draw.DrawComponent)
     */
    public TextSpriteBuilder component(com.sencha.gxt.chart.client.draw.DrawComponent v0) {
        textSprite.setComponent(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.chart.client.draw.sprite.TextSprite#setCursor(java.lang.String)
     */
    public TextSpriteBuilder cursor(java.lang.String v0) {
        textSprite.setCursor(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.chart.client.draw.sprite.TextSprite#setFill(com.sencha.gxt.chart.client.draw.Color)
     */
    public TextSpriteBuilder fill(com.sencha.gxt.chart.client.draw.Color v0) {
        textSprite.setFill(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.chart.client.draw.sprite.TextSprite#setFillOpacity(double)
     */
    public TextSpriteBuilder fillOpacity(double v0) {
        textSprite.setFillOpacity(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.chart.client.draw.sprite.TextSprite#setFont(java.lang.String)
     */
    public TextSpriteBuilder font(java.lang.String v0) {
        textSprite.setFont(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.chart.client.draw.sprite.TextSprite#setFontSize(int)
     */
    public TextSpriteBuilder fontSize(int v0) {
        textSprite.setFontSize(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.chart.client.draw.sprite.TextSprite#setFontStyle(com.google.gwt.dom.client.Style.FontStyle)
     */
    public TextSpriteBuilder fontStyle(com.google.gwt.dom.client.Style.FontStyle v0) {
        textSprite.setFontStyle(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.chart.client.draw.sprite.TextSprite#setFontWeight(com.google.gwt.dom.client.Style.FontWeight)
     */
    public TextSpriteBuilder fontWeight(com.google.gwt.dom.client.Style.FontWeight v0) {
        textSprite.setFontWeight(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.chart.client.draw.sprite.TextSprite#setHidden(boolean)
     */
    public TextSpriteBuilder hidden(boolean v0) {
        textSprite.setHidden(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.chart.client.draw.sprite.TextSprite#setOpacity(double)
     */
    public TextSpriteBuilder opacity(double v0) {
        textSprite.setOpacity(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.chart.client.draw.sprite.TextSprite#setRotation(com.sencha.gxt.chart.client.draw.Rotation)
     */
    public TextSpriteBuilder rotation(com.sencha.gxt.chart.client.draw.Rotation v0) {
        textSprite.setRotation(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.chart.client.draw.sprite.TextSprite#setRotation(double)
     */
    public TextSpriteBuilder rotation(double v0) {
        textSprite.setRotation(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.chart.client.draw.sprite.TextSprite#setRotation(double, double, double)
     */
    public TextSpriteBuilder rotation(double v0, double v1, double v2) {
        textSprite.setRotation(v0, v1, v2);
        return this;
    }

    /**
     * @see com.sencha.gxt.chart.client.draw.sprite.TextSprite#setScaling(com.sencha.gxt.chart.client.draw.Scaling)
     */
    public TextSpriteBuilder scaling(com.sencha.gxt.chart.client.draw.Scaling v0) {
        textSprite.setScaling(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.chart.client.draw.sprite.TextSprite#setScaling(double)
     */
    public TextSpriteBuilder scaling(double v0) {
        textSprite.setScaling(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.chart.client.draw.sprite.TextSprite#setScaling(double, double, double, double)
     */
    public TextSpriteBuilder scaling(double v0, double v1, double v2, double v3) {
        textSprite.setScaling(v0, v1, v2, v3);
        return this;
    }

    /**
     * @see com.sencha.gxt.chart.client.draw.sprite.TextSprite#setStroke(com.sencha.gxt.chart.client.draw.Color)
     */
    public TextSpriteBuilder stroke(com.sencha.gxt.chart.client.draw.Color v0) {
        textSprite.setStroke(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.chart.client.draw.sprite.TextSprite#setStrokeOpacity(double)
     */
    public TextSpriteBuilder strokeOpacity(double v0) {
        textSprite.setStrokeOpacity(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.chart.client.draw.sprite.TextSprite#setStrokeWidth(double)
     */
    public TextSpriteBuilder strokeWidth(double v0) {
        textSprite.setStrokeWidth(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.chart.client.draw.sprite.TextSprite#setSurface(com.sencha.gxt.chart.client.draw.Surface)
     */
    public TextSpriteBuilder surface(com.sencha.gxt.chart.client.draw.Surface v0) {
        textSprite.setSurface(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.chart.client.draw.sprite.TextSprite#setText(java.lang.String)
     */
    public TextSpriteBuilder text(java.lang.String v0) {
        textSprite.setText(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.chart.client.draw.sprite.TextSprite#setTextAnchor(com.sencha.gxt.chart.client.draw.sprite.TextSprite.TextAnchor)
     */
    public TextSpriteBuilder textAnchor(com.sencha.gxt.chart.client.draw.sprite.TextSprite.TextAnchor v0) {
        textSprite.setTextAnchor(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.chart.client.draw.sprite.TextSprite#setTextBaseline(com.sencha.gxt.chart.client.draw.sprite.TextSprite.TextBaseline)
     */
    public TextSpriteBuilder textBaseline(com.sencha.gxt.chart.client.draw.sprite.TextSprite.TextBaseline v0) {
        textSprite.setTextBaseline(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.chart.client.draw.sprite.TextSprite#setTranslation(com.sencha.gxt.chart.client.draw.Translation)
     */
    public TextSpriteBuilder translation(com.sencha.gxt.chart.client.draw.Translation v0) {
        textSprite.setTranslation(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.chart.client.draw.sprite.TextSprite#setTranslation(double, double)
     */
    public TextSpriteBuilder translation(double v0, double v1) {
        textSprite.setTranslation(v0, v1);
        return this;
    }

    /**
     * @see com.sencha.gxt.chart.client.draw.sprite.TextSprite#setX(double)
     */
    public TextSpriteBuilder x(double v0) {
        textSprite.setX(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.chart.client.draw.sprite.TextSprite#setY(double)
     */
    public TextSpriteBuilder y(double v0) {
        textSprite.setY(v0);
        return this;
    }

    /**
     * @see com.sencha.gxt.chart.client.draw.sprite.TextSprite#setZIndex(int)
     */
    public TextSpriteBuilder zIndex(int v0) {
        textSprite.setZIndex(v0);
        return this;
    }
}
