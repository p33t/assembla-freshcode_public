<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>biz.freshcode.learn.platform-probe</groupId>
    <artifactId>platform-probe</artifactId>
    <packaging>war</packaging>
    <version>1.1-SNAPSHOT</version>

    <name>platform-probe</name>
    <url>http://maven.apache.org</url>

    <properties>
      <maven.compiler.source>1.7</maven.compiler.source>
      <maven.compiler.target>1.7</maven.compiler.target>
      <tomcat.version>7.0.47</tomcat.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>servlet-api</artifactId>
            <version>2.5</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>javax.servlet.jsp</groupId>
            <artifactId>jsp-api</artifactId>
            <version>2.1</version>
            <scope>provided</scope>
        </dependency>
    </dependencies>

    <build>
        <finalName>${project.name}</finalName>
        <plugins>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>keytool-maven-plugin</artifactId>
                <version>1.1</version>
                <executions>
                    <execution>
                        <phase>generate-resources</phase>
                        <id>clean</id>
                        <goals>
                            <goal>clean</goal>
                        </goals>
                    </execution>
                    <execution>
                        <phase>generate-resources</phase>
                        <id>genkey</id>
                        <goals>
                            <goal>genkey</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <keystore>${project.build.directory}/tomcat-ssl.keystore</keystore>
                    <dname>cn=localhost</dname>
                    <keypass>platform-probe</keypass>
                    <storepass>platform-probe</storepass>
                    <alias>platform-probe</alias>
                    <keyalg>RSA</keyalg>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.tomcat.maven</groupId>
                <artifactId>tomcat7-maven-plugin</artifactId>
                <version>2.2</version>
                <configuration>
                    <!-- application path always starts with /-->
                    <path>/</path>
                    <!-- http port -->
                    <port>8080</port>
                    <httpsPort>8443</httpsPort>
                    <keystoreFile>${project.build.directory}/tomcat-ssl.keystore</keystoreFile>
                    <keystorePass>platform-probe</keystorePass>
                    <!-- optional path to a context file -->
                    <contextFile>${project.basedir}/src/main/config/context.xml</contextFile>
                    <!-- optional system properties you want to add -->
                    <systemProperties>
                        <appserver.base>${project.build.directory}/appserver-base</appserver.base>
                        <appserver.home>${project.build.directory}/appserver-home</appserver.home>
                        <derby.system.home>${project.build.directory}/appserver-base/logs</derby.system.home>
                        <java.io.tmpdir>${project.build.directory}</java.io.tmpdir>
                    </systemProperties>
                    <!-- if you want to use test dependencies rather than only runtime -->
                    <useTestClasspath>false</useTestClasspath>
                    <!-- optional if you want to add some extra directories into the classloader -->
                    <!--<additionalClasspathDirs>-->
                    <!--<additionalClasspathDir></additionalClasspathDir>-->
                    <!--</additionalClasspathDirs>-->
                </configuration>
                <!-- For any extra dependencies needed when running embedded Tomcat (not WAR dependencies) add them below -->
                <dependencies>

                    <dependency>
                        <groupId>org.postgresql</groupId>
                        <artifactId>postgresql</artifactId>
                        <version>9.3-1100-jdbc41</version>
                    </dependency>

                    <!-- Support JNDI defined data source -->
                    <dependency>
                        <groupId>com.h2database</groupId>
                        <artifactId>h2</artifactId>
                        <version>1.4.178</version>
                    </dependency>

                </dependencies>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>2.1.1</version>
                <executions>
                    <execution>
                        <phase>compile</phase>
                        <goals>
                            <goal>exploded</goal>
                        </goals>
                    </execution>
                </executions>
<!--
                <configuration>
                    <webResources>
                        <resource>
                            <directory>src/main/config</directory>
                            <includes>
                                <include>context.xml</include>
                            </includes>
                            <filtering>false</filtering>
                            <targetPath>META-INF</targetPath>
                        </resource>
                    </webResources>
                    <webappDirectory>${webappDirectory}</webappDirectory>

                </configuration>
-->
            </plugin>


        </plugins>
    </build>
</project>
