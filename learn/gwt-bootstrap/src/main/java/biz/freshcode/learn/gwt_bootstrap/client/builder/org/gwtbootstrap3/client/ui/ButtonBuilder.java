package biz.freshcode.learn.gwt_bootstrap.client.builder.org.gwtbootstrap3.client.ui;

import org.gwtbootstrap3.client.ui.Button;

/**
 * Generated by BuilderGenerator
 *
 * @see org.gwtbootstrap3.client.ui.Button
 */
@SuppressWarnings("UnusedDeclaration")
@biz.freshcode.learn.gwt_bootstrap.client.builder.BeanBuilder(Button.class)
public class ButtonBuilder extends biz.freshcode.learn.gwt_bootstrap.client.builder.Construct.Parent<ButtonBuilder> {
    public final Button button;

    public ButtonBuilder(Button v) {
        button = v;
    }

    /**
     * @see org.gwtbootstrap3.client.ui.Button#Button()
     */
    public ButtonBuilder() {
        this(new Button());
    }

    /**
     * @see org.gwtbootstrap3.client.ui.Button#Button(java.lang.String)
     */
    public ButtonBuilder(java.lang.String v0) {
        this(new Button(v0));
    }

    /**
     * @see org.gwtbootstrap3.client.ui.Button#Button(java.lang.String, com.google.gwt.event.dom.client.ClickHandler)
     */
    public ButtonBuilder(java.lang.String v0, com.google.gwt.event.dom.client.ClickHandler v1) {
        this(new Button(v0, v1));
    }

    /**
     * @see org.gwtbootstrap3.client.ui.Button#Button(java.lang.String, org.gwtbootstrap3.client.ui.constants.IconType, com.google.gwt.event.dom.client.ClickHandler)
     */
    public ButtonBuilder(java.lang.String v0, org.gwtbootstrap3.client.ui.constants.IconType v1, com.google.gwt.event.dom.client.ClickHandler v2) {
        this(new Button(v0, v1, v2));
    }

    /**
     * @see org.gwtbootstrap3.client.ui.Button#add(com.google.gwt.user.client.ui.Widget)
     */
    public ButtonBuilder add(com.google.gwt.user.client.ui.Widget v0) {
        button.add(v0);
        return this;
    }

    /**
     * @see org.gwtbootstrap3.client.ui.Button#add(com.google.gwt.user.client.ui.IsWidget)
     */
    public ButtonBuilder add(com.google.gwt.user.client.ui.IsWidget v0) {
        button.add(v0);
        return this;
    }

    /**
     * @see org.gwtbootstrap3.client.ui.Button#addStyleDependentName(java.lang.String)
     */
    public ButtonBuilder addStyleDependentName(java.lang.String v0) {
        button.addStyleDependentName(v0);
        return this;
    }

    /**
     * @see org.gwtbootstrap3.client.ui.Button#addStyleName(java.lang.String)
     */
    public ButtonBuilder addStyleName(java.lang.String v0) {
        button.addStyleName(v0);
        return this;
    }

    /**
     * @see org.gwtbootstrap3.client.ui.Button#setAccessKey(char)
     */
    public ButtonBuilder accessKey(char v0) {
        button.setAccessKey(v0);
        return this;
    }

    /**
     * @see org.gwtbootstrap3.client.ui.Button#setActive(boolean)
     */
    public ButtonBuilder active(boolean v0) {
        button.setActive(v0);
        return this;
    }

    /**
     * @see org.gwtbootstrap3.client.ui.Button#setBadgePosition(org.gwtbootstrap3.client.ui.constants.BadgePosition)
     */
    public ButtonBuilder badgePosition(org.gwtbootstrap3.client.ui.constants.BadgePosition v0) {
        button.setBadgePosition(v0);
        return this;
    }

    /**
     * @see org.gwtbootstrap3.client.ui.Button#setBadgeText(java.lang.String)
     */
    public ButtonBuilder badgeText(java.lang.String v0) {
        button.setBadgeText(v0);
        return this;
    }

    /**
     * @see org.gwtbootstrap3.client.ui.Button#setBlock(boolean)
     */
    public ButtonBuilder block(boolean v0) {
        button.setBlock(v0);
        return this;
    }

    /**
     * @see org.gwtbootstrap3.client.ui.Button#setColor(java.lang.String)
     */
    public ButtonBuilder color(java.lang.String v0) {
        button.setColor(v0);
        return this;
    }

    /**
     * @see org.gwtbootstrap3.client.ui.Button#setDataDismiss(org.gwtbootstrap3.client.ui.constants.ButtonDismiss)
     */
    public ButtonBuilder dataDismiss(org.gwtbootstrap3.client.ui.constants.ButtonDismiss v0) {
        button.setDataDismiss(v0);
        return this;
    }

    /**
     * @see org.gwtbootstrap3.client.ui.Button#setDataLoadingText(java.lang.String)
     */
    public ButtonBuilder dataLoadingText(java.lang.String v0) {
        button.setDataLoadingText(v0);
        return this;
    }

    /**
     * @see org.gwtbootstrap3.client.ui.Button#setDataTarget(java.lang.String)
     */
    public ButtonBuilder dataTarget(java.lang.String v0) {
        button.setDataTarget(v0);
        return this;
    }

    /**
     * @see org.gwtbootstrap3.client.ui.Button#setDataTargetWidget(com.google.gwt.user.client.ui.Widget)
     */
    public ButtonBuilder dataTargetWidget(com.google.gwt.user.client.ui.Widget v0) {
        button.setDataTargetWidget(v0);
        return this;
    }

    /**
     * @see org.gwtbootstrap3.client.ui.Button#setDataTargetWidgets(java.util.List)
     */
    public ButtonBuilder dataTargetWidgets(java.util.List<com.google.gwt.user.client.ui.Widget> v0) {
        button.setDataTargetWidgets(v0);
        return this;
    }

    /**
     * @see org.gwtbootstrap3.client.ui.Button#setDataToggle(org.gwtbootstrap3.client.ui.constants.Toggle)
     */
    public ButtonBuilder dataToggle(org.gwtbootstrap3.client.ui.constants.Toggle v0) {
        button.setDataToggle(v0);
        return this;
    }

    /**
     * @see org.gwtbootstrap3.client.ui.Button#setEnabled(boolean)
     */
    public ButtonBuilder enabled(boolean v0) {
        button.setEnabled(v0);
        return this;
    }

    /**
     * @see org.gwtbootstrap3.client.ui.Button#setFocus(boolean)
     */
    public ButtonBuilder focus(boolean v0) {
        button.setFocus(v0);
        return this;
    }

    /**
     * @see org.gwtbootstrap3.client.ui.Button#setHeight(java.lang.String)
     */
    public ButtonBuilder height(java.lang.String v0) {
        button.setHeight(v0);
        return this;
    }

    /**
     * @see org.gwtbootstrap3.client.ui.Button#setHiddenOn(org.gwtbootstrap3.client.ui.constants.DeviceSize)
     */
    public ButtonBuilder hiddenOn(org.gwtbootstrap3.client.ui.constants.DeviceSize v0) {
        button.setHiddenOn(v0);
        return this;
    }

    /**
     * @see org.gwtbootstrap3.client.ui.Button#setIcon(org.gwtbootstrap3.client.ui.constants.IconType)
     */
    public ButtonBuilder icon(org.gwtbootstrap3.client.ui.constants.IconType v0) {
        button.setIcon(v0);
        return this;
    }

    /**
     * @see org.gwtbootstrap3.client.ui.Button#setIconBordered(boolean)
     */
    public ButtonBuilder iconBordered(boolean v0) {
        button.setIconBordered(v0);
        return this;
    }

    /**
     * @see org.gwtbootstrap3.client.ui.Button#setIconFixedWidth(boolean)
     */
    public ButtonBuilder iconFixedWidth(boolean v0) {
        button.setIconFixedWidth(v0);
        return this;
    }

    /**
     * @see org.gwtbootstrap3.client.ui.Button#setIconFlip(org.gwtbootstrap3.client.ui.constants.IconFlip)
     */
    public ButtonBuilder iconFlip(org.gwtbootstrap3.client.ui.constants.IconFlip v0) {
        button.setIconFlip(v0);
        return this;
    }

    /**
     * @see org.gwtbootstrap3.client.ui.Button#setIconInverse(boolean)
     */
    public ButtonBuilder iconInverse(boolean v0) {
        button.setIconInverse(v0);
        return this;
    }

    /**
     * @see org.gwtbootstrap3.client.ui.Button#setIconPosition(org.gwtbootstrap3.client.ui.constants.IconPosition)
     */
    public ButtonBuilder iconPosition(org.gwtbootstrap3.client.ui.constants.IconPosition v0) {
        button.setIconPosition(v0);
        return this;
    }

    /**
     * @see org.gwtbootstrap3.client.ui.Button#setIconPulse(boolean)
     */
    public ButtonBuilder iconPulse(boolean v0) {
        button.setIconPulse(v0);
        return this;
    }

    /**
     * @see org.gwtbootstrap3.client.ui.Button#setIconRotate(org.gwtbootstrap3.client.ui.constants.IconRotate)
     */
    public ButtonBuilder iconRotate(org.gwtbootstrap3.client.ui.constants.IconRotate v0) {
        button.setIconRotate(v0);
        return this;
    }

    /**
     * @see org.gwtbootstrap3.client.ui.Button#setIconSize(org.gwtbootstrap3.client.ui.constants.IconSize)
     */
    public ButtonBuilder iconSize(org.gwtbootstrap3.client.ui.constants.IconSize v0) {
        button.setIconSize(v0);
        return this;
    }

    /**
     * @see org.gwtbootstrap3.client.ui.Button#setIconSpin(boolean)
     */
    public ButtonBuilder iconSpin(boolean v0) {
        button.setIconSpin(v0);
        return this;
    }

    /**
     * @see org.gwtbootstrap3.client.ui.Button#setId(java.lang.String)
     */
    public ButtonBuilder id(java.lang.String v0) {
        button.setId(v0);
        return this;
    }

    /**
     * @see org.gwtbootstrap3.client.ui.Button#setLayoutData(java.lang.Object)
     */
    public ButtonBuilder layoutData(java.lang.Object v0) {
        button.setLayoutData(v0);
        return this;
    }

    /**
     * @see org.gwtbootstrap3.client.ui.Button#setMarginBottom(double)
     */
    public ButtonBuilder marginBottom(double v0) {
        button.setMarginBottom(v0);
        return this;
    }

    /**
     * @see org.gwtbootstrap3.client.ui.Button#setMarginLeft(double)
     */
    public ButtonBuilder marginLeft(double v0) {
        button.setMarginLeft(v0);
        return this;
    }

    /**
     * @see org.gwtbootstrap3.client.ui.Button#setMarginRight(double)
     */
    public ButtonBuilder marginRight(double v0) {
        button.setMarginRight(v0);
        return this;
    }

    /**
     * @see org.gwtbootstrap3.client.ui.Button#setMarginTop(double)
     */
    public ButtonBuilder marginTop(double v0) {
        button.setMarginTop(v0);
        return this;
    }

    /**
     * @see org.gwtbootstrap3.client.ui.Button#setPaddingBottom(double)
     */
    public ButtonBuilder paddingBottom(double v0) {
        button.setPaddingBottom(v0);
        return this;
    }

    /**
     * @see org.gwtbootstrap3.client.ui.Button#setPaddingLeft(double)
     */
    public ButtonBuilder paddingLeft(double v0) {
        button.setPaddingLeft(v0);
        return this;
    }

    /**
     * @see org.gwtbootstrap3.client.ui.Button#setPaddingRight(double)
     */
    public ButtonBuilder paddingRight(double v0) {
        button.setPaddingRight(v0);
        return this;
    }

    /**
     * @see org.gwtbootstrap3.client.ui.Button#setPaddingTop(double)
     */
    public ButtonBuilder paddingTop(double v0) {
        button.setPaddingTop(v0);
        return this;
    }

    /**
     * @see org.gwtbootstrap3.client.ui.Button#setPixelSize(int, int)
     */
    public ButtonBuilder pixelSize(int v0, int v1) {
        button.setPixelSize(v0, v1);
        return this;
    }

    /**
     * @see org.gwtbootstrap3.client.ui.Button#setPull(org.gwtbootstrap3.client.ui.constants.Pull)
     */
    public ButtonBuilder pull(org.gwtbootstrap3.client.ui.constants.Pull v0) {
        button.setPull(v0);
        return this;
    }

    /**
     * @see org.gwtbootstrap3.client.ui.Button#setSize(org.gwtbootstrap3.client.ui.constants.ButtonSize)
     */
    public ButtonBuilder size(org.gwtbootstrap3.client.ui.constants.ButtonSize v0) {
        button.setSize(v0);
        return this;
    }

    /**
     * @see org.gwtbootstrap3.client.ui.Button#setSize(java.lang.String, java.lang.String)
     */
    public ButtonBuilder size(java.lang.String v0, java.lang.String v1) {
        button.setSize(v0, v1);
        return this;
    }

    /**
     * @see org.gwtbootstrap3.client.ui.Button#setStyleDependentName(java.lang.String, boolean)
     */
    public ButtonBuilder styleDependentName(java.lang.String v0, boolean v1) {
        button.setStyleDependentName(v0, v1);
        return this;
    }

    /**
     * @see org.gwtbootstrap3.client.ui.Button#setStyleName(java.lang.String)
     */
    public ButtonBuilder styleName(java.lang.String v0) {
        button.setStyleName(v0);
        return this;
    }

    /**
     * @see org.gwtbootstrap3.client.ui.Button#setStyleName(java.lang.String, boolean)
     */
    public ButtonBuilder styleName(java.lang.String v0, boolean v1) {
        button.setStyleName(v0, v1);
        return this;
    }

    /**
     * @see org.gwtbootstrap3.client.ui.Button#setStylePrimaryName(java.lang.String)
     */
    public ButtonBuilder stylePrimaryName(java.lang.String v0) {
        button.setStylePrimaryName(v0);
        return this;
    }

    /**
     * @see org.gwtbootstrap3.client.ui.Button#setTabIndex(int)
     */
    public ButtonBuilder tabIndex(int v0) {
        button.setTabIndex(v0);
        return this;
    }

    /**
     * @see org.gwtbootstrap3.client.ui.Button#setText(java.lang.String)
     */
    public ButtonBuilder text(java.lang.String v0) {
        button.setText(v0);
        return this;
    }

    /**
     * @see org.gwtbootstrap3.client.ui.Button#setTitle(java.lang.String)
     */
    public ButtonBuilder title(java.lang.String v0) {
        button.setTitle(v0);
        return this;
    }

    /**
     * @see org.gwtbootstrap3.client.ui.Button#setToggleCaret(boolean)
     */
    public ButtonBuilder toggleCaret(boolean v0) {
        button.setToggleCaret(v0);
        return this;
    }

    /**
     * @see org.gwtbootstrap3.client.ui.Button#setType(org.gwtbootstrap3.client.ui.constants.ButtonType)
     */
    public ButtonBuilder type(org.gwtbootstrap3.client.ui.constants.ButtonType v0) {
        button.setType(v0);
        return this;
    }

    /**
     * @see org.gwtbootstrap3.client.ui.Button#setVisible(boolean)
     */
    public ButtonBuilder visible(boolean v0) {
        button.setVisible(v0);
        return this;
    }

    /**
     * @see org.gwtbootstrap3.client.ui.Button#setVisibleOn(org.gwtbootstrap3.client.ui.constants.DeviceSize)
     */
    public ButtonBuilder visibleOn(org.gwtbootstrap3.client.ui.constants.DeviceSize v0) {
        button.setVisibleOn(v0);
        return this;
    }

    /**
     * @see org.gwtbootstrap3.client.ui.Button#setWidth(java.lang.String)
     */
    public ButtonBuilder width(java.lang.String v0) {
        button.setWidth(v0);
        return this;
    }
}
